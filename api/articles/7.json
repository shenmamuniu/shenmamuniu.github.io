{"title":"Mysql数据库备份与恢复","slug":"7","date":"2019-11-14T14:49:00.000Z","updated":"2020-04-30T02:20:28.000Z","comments":true,"path":"api/articles/7.json","realPath":null,"excerpt":"本文主要记录mysql使用binlog对数据库进行增量及全量备份。","covers":null,"cover":null,"content":"<p>本文主要记录mysql使用binlog对数据库进行增量及全量备份。</p>\n<span id=\"more\"></span>\n<h2 id=\"全量备份-4\"><a href=\"#全量备份-4\" class=\"headerlink\" title=\"全量备份[4]\"></a>全量备份[4]</h2><p>数据库的全量备份有mysqldump工具，也可以<a href=\"https://jingyan.baidu.com/article/8275fc8667151446a03cf6e3.html\">使用navicat for mysql提供的备份工具</a>，这里只介绍mysqldump工具，使用步骤如下：</p>\n<ol>\n<li>数据库备份<br>全量备份可以使用mysql自带的mysqldump工具，参数有：<br>databases,指定数据库<br>flush-logs，产生新的日志文件，binlog文件，这个在后面的增量备份有讲到过<br>delete-master-logs，删掉原来的日志文件，binlog文件<br>DumpFile是要备份的目标文件，输出文件<br>具体命令如下：<pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqldump -uroot -p123456 --databases wordpressdb --flush-logs --delete-master-logs --single-transaction &gt; $DumpFile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>数据库恢复<br>恢复的命令是在MySQL命令行中执行的，要先手动创建一个数据库，然后再use这个数据库：<br>mysql&gt;source  $DumpFile</li>\n</ol>\n<p>ps: 如果没什么特殊要求的话，其实使用Navicat for mysql做全量备份就可以了</p>\n<h2 id=\"增量备份\"><a href=\"#增量备份\" class=\"headerlink\" title=\"增量备份\"></a>增量备份</h2><p>增量备份是通过binlog实现的，只需要开启mysql的binlog，用户所有的DDL、DML语句都会记录在这个文件中，mysql binlog的开启这里不再介绍。</p>\n<ol>\n<li>Mysql查看binlog的开启状态<br>show variables like ‘%log_bin%’<br>其他binlog相关的命令(需要在mysql-client中执行)<pre class=\"line-numbers language-none\"><code class=\"language-none\">show master status;\n-- 查看binlog的内容\nshow binlog events in &#39;mysql-bin.000003&#39;;\n-- 使用新的文件记录日志\nflush logs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>使用mysqlbinlog查看binlog的内容<br>mysqlbinlog –no-defaults   mysql-bin.000004<br>mysqlbinlog  –no-defaults  –base64-output&#x3D;decode-rows –verbose mysql-bin.000015</li>\n</ol>\n<h2 id=\"通过binlog对数据进行恢复\"><a href=\"#通过binlog对数据进行恢复\" class=\"headerlink\" title=\"通过binlog对数据进行恢复\"></a>通过binlog对数据进行恢复</h2><p>使用mysqlbinlog工具mysql的数据进行恢复</p>\n<p>mysqlbinlog –no-defaults –start-position&#x3D;’651’  –stop-position&#x3D;’556’ mysql-bin.000004 mysql-bin.000005 | mysql -uroot -pabc123</p>\n<p>除了使用positon,也可以使用time，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqlbinlog --no-defaults --stop-datetime&#x3D;&#39;2018-09-03 22:18:03&#39; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;mysql-bin.000004 | mysql -uroot -p\n\nmysqlbinlog --no-defaults --start-datetime&#x3D;&#39;2018-09-03 22:18:09&#39; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;mysql-bin.000004 | mysql -uroot -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>如果有多个binlog,并排写,中间用空格隔开，其中第一个start-position是第一个binlog文件的pos点，stop-position是最后一个binlog的pos点</p>\n<p>关于binlog需要注意一下几点：</p>\n<ol>\n<li>不要查看当前正在写入的binlog文件</li>\n<li>不要加–force参数强制访问</li>\n<li>如果binlog格式是行模式的,请加 -vv参数</li>\n</ol>\n<h2 id=\"使用XtraBackup对数据库进行备份与恢复\"><a href=\"#使用XtraBackup对数据库进行备份与恢复\" class=\"headerlink\" title=\"使用XtraBackup对数据库进行备份与恢复\"></a>使用XtraBackup对数据库进行备份与恢复</h2><p>Mysql几种不同的备份方式：<br>设计合适的备份策略：</p>\n<pre><code>针对不同的场景下, 我们应该制定不同的备份策略对数据库进行备份, 一般情况下, 备份策略一般为以下三种\n\n    直接cp,tar复制数据库文件\n\n    mysqldump+复制BIN LOGS\n\n    lvm2快照+复制BIN LOGS\n\n    xtrabackup\n\n以上的几种解决方案分别针对于不同的场景\n\n    如果数据量较小, 可以使用第一种方式, 直接复制数据库文件\n\n    如果数据量还行, 可以使用第二种方式, 先使用mysqldump对数据库进行完全备份, 然后定期备份BINARY LOG达到增量备份的效果\n\n    如果数据量一般, 而又不过分影响业务运行, 可以使用第三种方式, 使用lvm2的快照对数据文件进行备份, 而后定期备份BINARY LOG达到增量备份的效果\n\n    如果数据量很大, 而又不过分影响业务运行, 可以使用第四种方式, 使用xtrabackup进行完全备份后, 定期使用xtrabackup进行增量备份或差异备份\n</code></pre>\n<p><a href=\"https://www.cnblogs.com/SQL888/p/5751631.html\">https://www.cnblogs.com/SQL888/p/5751631.html</a></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>通常情况下，如果数据库出现了问题，是需要全量备份和增量备份结合的，先通过全量备份恢复数据库，之后查看binlog找到导致问题的位置，恢复到问题之前的位置就可以了</p>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.cnblogs.com/cobbliu/p/4311926.html\">1、mysqlbinlog 查看binlog时报错unknown variable ‘default-character-set&#x3D;utf8’</a><br><a href=\"https://www.cnblogs.com/snifferhu/p/5280489.html\">2、MySQL的binlog数据如何查看</a><br><a href=\"https://blog.csdn.net/anzhen0429/article/details/78007127\">3、MYSQL简单的binlog恢复测试</a><br><a href=\"https://www.tuicool.com/articles/UzMNneb\">4、安全的web服务器——使用mysqldump和mysqlbinlog实现MySQL全量与增量备份</a><br><a href=\"http://xiaoxiyuashu.lofter.com/post/1d088eab_1c70d0b69\">5、封面源</a></p>\n","more":"<h2 id=\"全量备份-4\"><a href=\"#全量备份-4\" class=\"headerlink\" title=\"全量备份[4]\"></a>全量备份[4]</h2><p>数据库的全量备份有mysqldump工具，也可以<a href=\"https://jingyan.baidu.com/article/8275fc8667151446a03cf6e3.html\">使用navicat for mysql提供的备份工具</a>，这里只介绍mysqldump工具，使用步骤如下：</p>\n<ol>\n<li>数据库备份<br>全量备份可以使用mysql自带的mysqldump工具，参数有：<br>databases,指定数据库<br>flush-logs，产生新的日志文件，binlog文件，这个在后面的增量备份有讲到过<br>delete-master-logs，删掉原来的日志文件，binlog文件<br>DumpFile是要备份的目标文件，输出文件<br>具体命令如下：<pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqldump -uroot -p123456 --databases wordpressdb --flush-logs --delete-master-logs --single-transaction &gt; $DumpFile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>数据库恢复<br>恢复的命令是在MySQL命令行中执行的，要先手动创建一个数据库，然后再use这个数据库：<br>mysql&gt;source  $DumpFile</li>\n</ol>\n<p>ps: 如果没什么特殊要求的话，其实使用Navicat for mysql做全量备份就可以了</p>\n<h2 id=\"增量备份\"><a href=\"#增量备份\" class=\"headerlink\" title=\"增量备份\"></a>增量备份</h2><p>增量备份是通过binlog实现的，只需要开启mysql的binlog，用户所有的DDL、DML语句都会记录在这个文件中，mysql binlog的开启这里不再介绍。</p>\n<ol>\n<li>Mysql查看binlog的开启状态<br>show variables like ‘%log_bin%’<br>其他binlog相关的命令(需要在mysql-client中执行)<pre class=\"line-numbers language-none\"><code class=\"language-none\">show master status;\n-- 查看binlog的内容\nshow binlog events in &#39;mysql-bin.000003&#39;;\n-- 使用新的文件记录日志\nflush logs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>使用mysqlbinlog查看binlog的内容<br>mysqlbinlog –no-defaults   mysql-bin.000004<br>mysqlbinlog  –no-defaults  –base64-output&#x3D;decode-rows –verbose mysql-bin.000015</li>\n</ol>\n<h2 id=\"通过binlog对数据进行恢复\"><a href=\"#通过binlog对数据进行恢复\" class=\"headerlink\" title=\"通过binlog对数据进行恢复\"></a>通过binlog对数据进行恢复</h2><p>使用mysqlbinlog工具mysql的数据进行恢复</p>\n<p>mysqlbinlog –no-defaults –start-position&#x3D;’651’  –stop-position&#x3D;’556’ mysql-bin.000004 mysql-bin.000005 | mysql -uroot -pabc123</p>\n<p>除了使用positon,也可以使用time，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mysqlbinlog --no-defaults --stop-datetime&#x3D;&#39;2018-09-03 22:18:03&#39; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;mysql-bin.000004 | mysql -uroot -p\n\nmysqlbinlog --no-defaults --start-datetime&#x3D;&#39;2018-09-03 22:18:09&#39; &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;mysql-bin.000004 | mysql -uroot -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>如果有多个binlog,并排写,中间用空格隔开，其中第一个start-position是第一个binlog文件的pos点，stop-position是最后一个binlog的pos点</p>\n<p>关于binlog需要注意一下几点：</p>\n<ol>\n<li>不要查看当前正在写入的binlog文件</li>\n<li>不要加–force参数强制访问</li>\n<li>如果binlog格式是行模式的,请加 -vv参数</li>\n</ol>\n<h2 id=\"使用XtraBackup对数据库进行备份与恢复\"><a href=\"#使用XtraBackup对数据库进行备份与恢复\" class=\"headerlink\" title=\"使用XtraBackup对数据库进行备份与恢复\"></a>使用XtraBackup对数据库进行备份与恢复</h2><p>Mysql几种不同的备份方式：<br>设计合适的备份策略：</p>\n<pre><code>针对不同的场景下, 我们应该制定不同的备份策略对数据库进行备份, 一般情况下, 备份策略一般为以下三种\n\n    直接cp,tar复制数据库文件\n\n    mysqldump+复制BIN LOGS\n\n    lvm2快照+复制BIN LOGS\n\n    xtrabackup\n\n以上的几种解决方案分别针对于不同的场景\n\n    如果数据量较小, 可以使用第一种方式, 直接复制数据库文件\n\n    如果数据量还行, 可以使用第二种方式, 先使用mysqldump对数据库进行完全备份, 然后定期备份BINARY LOG达到增量备份的效果\n\n    如果数据量一般, 而又不过分影响业务运行, 可以使用第三种方式, 使用lvm2的快照对数据文件进行备份, 而后定期备份BINARY LOG达到增量备份的效果\n\n    如果数据量很大, 而又不过分影响业务运行, 可以使用第四种方式, 使用xtrabackup进行完全备份后, 定期使用xtrabackup进行增量备份或差异备份\n</code></pre>\n<p><a href=\"https://www.cnblogs.com/SQL888/p/5751631.html\">https://www.cnblogs.com/SQL888/p/5751631.html</a></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>通常情况下，如果数据库出现了问题，是需要全量备份和增量备份结合的，先通过全量备份恢复数据库，之后查看binlog找到导致问题的位置，恢复到问题之前的位置就可以了</p>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.cnblogs.com/cobbliu/p/4311926.html\">1、mysqlbinlog 查看binlog时报错unknown variable ‘default-character-set&#x3D;utf8’</a><br><a href=\"https://www.cnblogs.com/snifferhu/p/5280489.html\">2、MySQL的binlog数据如何查看</a><br><a href=\"https://blog.csdn.net/anzhen0429/article/details/78007127\">3、MYSQL简单的binlog恢复测试</a><br><a href=\"https://www.tuicool.com/articles/UzMNneb\">4、安全的web服务器——使用mysqldump和mysqlbinlog实现MySQL全量与增量备份</a><br><a href=\"http://xiaoxiyuashu.lofter.com/post/1d088eab_1c70d0b69\">5、封面源</a></p>","categories":[],"tags":[{"name":"Mysql","path":"api/tags/Mysql.json"},{"name":"数据库备份","path":"api/tags/数据库备份.json"}]}