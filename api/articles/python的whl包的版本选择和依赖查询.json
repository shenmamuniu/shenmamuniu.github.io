{"title":"Python的whl包的版本选择和依赖查询","slug":"python的whl包的版本选择和依赖查询","date":"2022-10-16T11:35:02.000Z","updated":"2022-11-26T11:58:51.854Z","comments":true,"path":"api/articles/python的whl包的版本选择和依赖查询.json","realPath":null,"excerpt":"本文主要介绍如何选择合适的whl包，以及如何查询whl包的依赖。","covers":["/2022/10/16/python-de-whl-bao-de-ban-ben-xuan-ze-he-yi-lai-cha-xun/2022-10-16_194301.jpg"],"cover":"/2022/10/16/python-de-whl-bao-de-ban-ben-xuan-ze-he-yi-lai-cha-xun/2022-10-16_194301.jpg","content":"<p>本文主要介绍如何选择合适的whl包，以及如何查询whl包的依赖。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"pip离线安装时如果选择whl包\"><a href=\"#pip离线安装时如果选择whl包\" class=\"headerlink\" title=\"pip离线安装时如果选择whl包\"></a>pip离线安装时如果选择whl包</h2><p>这里以pycryptodomex为例<br>先在可以访问互联网的机器上通过pip install pycryptodomex<br>然后查询pycryptodomex,可以找到pycryptodomex-3.15.0.dist-info目录<br>里面找到一个WHEEL文件，记录了版本信息:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Wheel-Version: 1.0\nGenerator: bdist_wheel (0.36.2)\nRoot-Is-Purelib: false\nTag: cp35-abi3-win_amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样就能确定应该要下载的whl包了</p>\n<h2 id=\"whl包的依赖查询\"><a href=\"#whl包的依赖查询\" class=\"headerlink\" title=\"whl包的依赖查询\"></a>whl包的依赖查询</h2><p>在离线安装whl包，可能会出现有若干依赖没有安装的问题，这时如果能知道这个包的所有依赖，就能下载全部依赖后，再进行安装，这里以requests为例：</p>\n<p>先在一台可以访问互联网的机器上安装requests，然后执行以下命令:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip show requests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>会出现如下信息：</p>\n<p><img src=\"/2022/10/16/python-de-whl-bao-de-ban-ben-xuan-ze-he-yi-lai-cha-xun/2022-10-16_194301.jpg\"></p>\n<p>这样将这些依赖一起下载后，再去安装requests就可以了。</p>\n","more":"<h2 id=\"pip离线安装时如果选择whl包\"><a href=\"#pip离线安装时如果选择whl包\" class=\"headerlink\" title=\"pip离线安装时如果选择whl包\"></a>pip离线安装时如果选择whl包</h2><p>这里以pycryptodomex为例<br>先在可以访问互联网的机器上通过pip install pycryptodomex<br>然后查询pycryptodomex,可以找到pycryptodomex-3.15.0.dist-info目录<br>里面找到一个WHEEL文件，记录了版本信息:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Wheel-Version: 1.0\nGenerator: bdist_wheel (0.36.2)\nRoot-Is-Purelib: false\nTag: cp35-abi3-win_amd64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样就能确定应该要下载的whl包了</p>\n<h2 id=\"whl包的依赖查询\"><a href=\"#whl包的依赖查询\" class=\"headerlink\" title=\"whl包的依赖查询\"></a>whl包的依赖查询</h2><p>在离线安装whl包，可能会出现有若干依赖没有安装的问题，这时如果能知道这个包的所有依赖，就能下载全部依赖后，再进行安装，这里以requests为例：</p>\n<p>先在一台可以访问互联网的机器上安装requests，然后执行以下命令:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip show requests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>会出现如下信息：</p>\n<p><img src=\"/2022/10/16/python-de-whl-bao-de-ban-ben-xuan-ze-he-yi-lai-cha-xun/2022-10-16_194301.jpg\"></p>\n<p>这样将这些依赖一起下载后，再去安装requests就可以了。</p>","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}