{"title":"Python3获取键盘输入及print函数的使用","slug":"Python3获取键盘输入及print函数的使用","date":"2022-12-21T08:50:21.000Z","updated":"2022-12-21T09:11:38.501Z","comments":true,"path":"api/articles/Python3获取键盘输入及print函数的使用.json","realPath":null,"excerpt":"本文介绍python脚本打包的全过程。","covers":["/2022/12/21/python3-huo-qu-jian-pan-shu-ru-ji-print-han-shu-de-shi-yong/2022-12-21_165353.jpg"],"cover":"/2022/12/21/python3-huo-qu-jian-pan-shu-ru-ji-print-han-shu-de-shi-yong/2022-12-21_165353.jpg","content":"<p>本文介绍python脚本打包的全过程。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>Python: 3.9</p>\n<p>OS: Win10</p>\n<h2 id=\"应用简介\"><a href=\"#应用简介\" class=\"headerlink\" title=\"应用简介\"></a>应用简介</h2><p>用Python写了一个脚本处理图片数据，其中输入和输出目录需要手动设置，最终达到的效果如下所示：</p>\n<p><img src=\"/2022/12/21/python3-huo-qu-jian-pan-shu-ru-ji-print-han-shu-de-shi-yong/2022-12-21_165353.jpg\" alt=\"最终效果\"></p>\n<h2 id=\"获取键盘输入\"><a href=\"#获取键盘输入\" class=\"headerlink\" title=\"获取键盘输入\"></a>获取键盘输入</h2><p>使用input()可以获取键盘输入数据，其中\\n为换行符：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">input_dir<span class=\"token operator\">=</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入tif文件所在目录:\\n\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"PIL提示图片大小超出显示\"><a href=\"#PIL提示图片大小超出显示\" class=\"headerlink\" title=\"PIL提示图片大小超出显示\"></a>PIL提示图片大小超出显示</h2><p>DecompressionBombWarning: Image size (92680344 pixels) exceeds limit of  89478485 pixels, could be decompression bomb DOS  attack.DecompressionBombWarning…</p>\n<p><a href=\"https://www.cnblogs.com/PiaoLingJiLu/p/14335184.html\">可调整上限</a>：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\nImage<span class=\"token punctuation\">.</span>MAX_IMAGE_PIXELS <span class=\"token operator\">=</span> <span class=\"token number\">2300000000</span> <span class=\"token comment\"># 更改阈值像素上限</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>不调整也没关系，只是会出现提示</p>\n</blockquote>\n<h2 id=\"Python3-print函数格式化\"><a href=\"#Python3-print函数格式化\" class=\"headerlink\" title=\"Python3 print函数格式化\"></a>Python3 print函数格式化</h2><p>输出多个int类型的变量：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'处理完成:%d个成功,%d个失败 '</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>counts<span class=\"token punctuation\">,</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>同时输出int和str类型的变量:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the length of (%s) is %d\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>python字符串格式化符号(更多的可<a href=\"https://www.runoob.com/w3cnote/python3-print-func-b.html\">参考</a>):</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">符号</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">s%</td>\n<td>格式化字符串</td>\n</tr>\n<tr>\n<td align=\"center\">d%</td>\n<td>格式化整数</td>\n</tr>\n<tr>\n<td align=\"center\">f%</td>\n<td>格式化浮点数字</td>\n</tr>\n</tbody></table>\n<h2 id=\"Pyinstaller打包时设置图标\"><a href=\"#Pyinstaller打包时设置图标\" class=\"headerlink\" title=\"Pyinstaller打包时设置图标\"></a>Pyinstaller打包时设置图标</h2><p>添加–icon参数：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pyinstaller <span class=\"token operator\">-</span>F xx<span class=\"token punctuation\">.</span>py <span class=\"token operator\">-</span><span class=\"token operator\">-</span>icon<span class=\"token operator\">=</span><span class=\"token string\">\"xx.ico\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>可将ico文件放在py文件同级目录</p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>本文记录了一个简单的含用户交互的python脚本的从0到打包的全过程，希望对你有所帮助。</p>\n","more":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>Python: 3.9</p>\n<p>OS: Win10</p>\n<h2 id=\"应用简介\"><a href=\"#应用简介\" class=\"headerlink\" title=\"应用简介\"></a>应用简介</h2><p>用Python写了一个脚本处理图片数据，其中输入和输出目录需要手动设置，最终达到的效果如下所示：</p>\n<p><img src=\"/2022/12/21/python3-huo-qu-jian-pan-shu-ru-ji-print-han-shu-de-shi-yong/2022-12-21_165353.jpg\" alt=\"最终效果\"></p>\n<h2 id=\"获取键盘输入\"><a href=\"#获取键盘输入\" class=\"headerlink\" title=\"获取键盘输入\"></a>获取键盘输入</h2><p>使用input()可以获取键盘输入数据，其中\\n为换行符：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">input_dir<span class=\"token operator\">=</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入tif文件所在目录:\\n\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"PIL提示图片大小超出显示\"><a href=\"#PIL提示图片大小超出显示\" class=\"headerlink\" title=\"PIL提示图片大小超出显示\"></a>PIL提示图片大小超出显示</h2><p>DecompressionBombWarning: Image size (92680344 pixels) exceeds limit of  89478485 pixels, could be decompression bomb DOS  attack.DecompressionBombWarning…</p>\n<p><a href=\"https://www.cnblogs.com/PiaoLingJiLu/p/14335184.html\">可调整上限</a>：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\nImage<span class=\"token punctuation\">.</span>MAX_IMAGE_PIXELS <span class=\"token operator\">=</span> <span class=\"token number\">2300000000</span> <span class=\"token comment\"># 更改阈值像素上限</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>不调整也没关系，只是会出现提示</p>\n</blockquote>\n<h2 id=\"Python3-print函数格式化\"><a href=\"#Python3-print函数格式化\" class=\"headerlink\" title=\"Python3 print函数格式化\"></a>Python3 print函数格式化</h2><p>输出多个int类型的变量：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'处理完成:%d个成功,%d个失败 '</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>counts<span class=\"token punctuation\">,</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>同时输出int和str类型的变量:</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"the length of (%s) is %d\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>python字符串格式化符号(更多的可<a href=\"https://www.runoob.com/w3cnote/python3-print-func-b.html\">参考</a>):</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">符号</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">s%</td>\n<td>格式化字符串</td>\n</tr>\n<tr>\n<td align=\"center\">d%</td>\n<td>格式化整数</td>\n</tr>\n<tr>\n<td align=\"center\">f%</td>\n<td>格式化浮点数字</td>\n</tr>\n</tbody></table>\n<h2 id=\"Pyinstaller打包时设置图标\"><a href=\"#Pyinstaller打包时设置图标\" class=\"headerlink\" title=\"Pyinstaller打包时设置图标\"></a>Pyinstaller打包时设置图标</h2><p>添加–icon参数：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pyinstaller <span class=\"token operator\">-</span>F xx<span class=\"token punctuation\">.</span>py <span class=\"token operator\">-</span><span class=\"token operator\">-</span>icon<span class=\"token operator\">=</span><span class=\"token string\">\"xx.ico\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>可将ico文件放在py文件同级目录</p>\n</blockquote>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>本文记录了一个简单的含用户交互的python脚本的从0到打包的全过程，希望对你有所帮助。</p>","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}