{"title":"Nginx中的安全配置","slug":"58","date":"2020-04-10T09:11:00.000Z","updated":"2022-07-07T01:30:15.000Z","comments":true,"path":"api/articles/58.json","excerpt":"本文主要介绍Nginx中的一些安全配置。","covers":null,"content":"<p>本文主要介绍Nginx中的一些安全配置。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"屏蔽某些访问链接\"><a href=\"#屏蔽某些访问链接\" class=\"headerlink\" title=\"屏蔽某些访问链接\"></a>屏蔽某些访问链接</h2><p>如所有包含有feed的链接都会直接返回403</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">location &#x2F;feed &#123;\ndeny all;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"通过UA禁止某些非正常的客户端的访问\"><a href=\"#通过UA禁止某些非正常的客户端的访问\" class=\"headerlink\" title=\"通过UA禁止某些非正常的客户端的访问\"></a>通过UA禁止某些非正常的客户端的访问</h2><p>这里主要禁止爬虫、httpclient等的访问。<br>在Nginx安装目录新建一个agent_deny.conf文件，添加如下内容:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">if ($http_user_agent ~* (Scrapy|masscan|Curl|HttpClient|fasthttp)) &#123;\n     return 403;\n&#125;\n# 禁止指定UA及UA为空的访问\nif ($http_user_agent ~ &quot;zgrab|Go-http-client|Dataprovider.com|bing|Wappalyzer|libwww-perl|bingbot|WinHttp|WebZIP|FetchURL|node-superagent|java&#x2F;|FeedDemon|Jullo|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|Java|Feedly|Apache-HttpAsyncClient|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|Ezooms|BOT&#x2F;0.1|YandexBot|FlightDeckReports|Linguee Bot|^$&quot; ) &#123;\n     return 403;\n&#125;\n\nif ($http_user_agent ~* &quot;Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|MSNBot|ia_archiver|Tomato Bot&quot;)\n&#123;\nreturn 403;\n&#125;\nif ($http_user_agent ~* &quot;ApiTool&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;python&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;bingbot&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;Nimbostratus-Bot&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;Go-Ahead-Got-It&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;GetWeb!&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Go!Zilla&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Download Demon&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Indy Library&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;libwww-perl&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Nmap Scripting Engine&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;~17ce.com&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;WebBench*&quot;) &#123; return 403; &#125;\n# if ($http_user_agent ~* &quot;spider&quot;) &#123; return 403; &#125; # 这个会影响国内某些搜索引擎爬虫，比如：搜狗\n\n# 禁止非GET|HEAD|POST方式的抓取\nif ($request_method !~ ^(GET|HEAD|POST)$) &#123;\n    return 403;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在server内添加 include ..&#x2F;agent_deny.conf即可，这里输入具体的文件的路径。</p>\n<h2 id=\"屏蔽某些ip\"><a href=\"#屏蔽某些ip\" class=\"headerlink\" title=\"屏蔽某些ip\"></a>屏蔽某些ip</h2><p>在nginx.conf同级目录下创建文件blocksip.conf，在http节点增加以下配置（也可以设置在server节点对单个网站起作用，或location节点只针对特定访问路径的限制）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">include blocksip.conf;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>blockip.conf中的内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">deny xxx;\nallow xxx;\ndeny all; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"隐藏X-Powerer\"><a href=\"#隐藏X-Powerer\" class=\"headerlink\" title=\"隐藏X-Powerer\"></a>隐藏X-Powerer</h2><p>在http下添加以下内容:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fastcgi_hide_header X-Powered-By\nproxy_hide_header X-Powered-By<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"响应头配置\"><a href=\"#响应头配置\" class=\"headerlink\" title=\"响应头配置\"></a>响应头配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># 减少点击劫持\nadd_header X-Frame-Options SAMEORIGIN;&#x2F;&#x2F;也可设置为DENY \n# 禁止服务器自动解析资源类型\nadd_header X-Content-Type-Options nosniff;\n# 防XSS攻击\nadd_header X-Xss-Protection 1; mode&#x3D;block;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"https配置\"><a href=\"#https配置\" class=\"headerlink\" title=\"https配置\"></a>https配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">ssl_certificate   ..&#x2F;cert&#x2F;192.168.10.106.pem;\nssl_certificate_key  ..&#x2F;cert&#x2F;192.168.10.106-key.pem;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"增强cookie的安全性\"><a href=\"#增强cookie的安全性\" class=\"headerlink\" title=\"增强cookie的安全性\"></a>增强cookie的安全性</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># 只支持 proxy 模式下设置，SameSite 不需要可删除，如果想更安全可以把 SameSite 设置为 Strict\nproxy_cookie_path &#x2F; &quot;&#x2F;; httponly; secure; SameSite&#x3D;Lax&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"80自动重定向至443\"><a href=\"#80自动重定向至443\" class=\"headerlink\" title=\"80自动重定向至443\"></a>80自动重定向至443</h2><p>server节点下添加：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">listen 80;\nserver_name xxx.xxx.xx; # 你的域名\nrewrite ^(.*)$ https:&#x2F;&#x2F;$&#123;server_name&#125;$1 permanent;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Nginx中IF语句的AND-OR等多重判断\"><a href=\"#Nginx中IF语句的AND-OR等多重判断\" class=\"headerlink\" title=\"Nginx中IF语句的AND OR等多重判断\"></a>Nginx中IF语句的AND OR等多重判断</h2><p>nginx的配置中不支持if条件的逻辑与／逻辑或运算 ，并且不支持if的嵌套语法，我们可以用变量的方式来实现：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">set $flag 0;\nif ($host !&#x3D; &#39;www.imfeng.com&#39;) &#123;\n    set $flag &quot;$&#123;flag&#125;1&quot;;\n&#125;\nif ($http_user_agent !&#x3D; &#39;spider&#39;) &#123;\n    set $flag &quot;$&#123;flag&#125;2&quot;;\n&#125;\nif ($flag &#x3D; &quot;012&quot;) &#123;\n    rewrite ^&#x2F;(.*)$ http:&#x2F;&#x2F;www.imfeng.com&#x2F;$1 permanent;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.cnblogs.com/ieinstein/p/7083551.html?utm_source=itdadao&utm_medium=referral\">1、nginx常用配置系列-HTTPS配置</a><br><a href=\"https://blog.cat73.org/20170802/2017080201.nginx-cookie-sucure/\">2、用 Nginx 自动给 Cookie 增加 Secure 和 HttpOnly</a><br><a href=\"https://www.cnblogs.com/aguncn/p/4179035.html\">3、NGINX实现IF语句里的AND，OR多重判断</a><br><a href=\"https://www.cnblogs.com/gouyg/p/10632243.html\">4、通过监控Nginx日志来实时屏蔽高频恶意访问的IP</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c8bfba2e\">4、封面图源</a></p>\n","more":"<h2 id=\"屏蔽某些访问链接\"><a href=\"#屏蔽某些访问链接\" class=\"headerlink\" title=\"屏蔽某些访问链接\"></a>屏蔽某些访问链接</h2><p>如所有包含有feed的链接都会直接返回403</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">location &#x2F;feed &#123;\ndeny all;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"通过UA禁止某些非正常的客户端的访问\"><a href=\"#通过UA禁止某些非正常的客户端的访问\" class=\"headerlink\" title=\"通过UA禁止某些非正常的客户端的访问\"></a>通过UA禁止某些非正常的客户端的访问</h2><p>这里主要禁止爬虫、httpclient等的访问。<br>在Nginx安装目录新建一个agent_deny.conf文件，添加如下内容:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">if ($http_user_agent ~* (Scrapy|masscan|Curl|HttpClient|fasthttp)) &#123;\n     return 403;\n&#125;\n# 禁止指定UA及UA为空的访问\nif ($http_user_agent ~ &quot;zgrab|Go-http-client|Dataprovider.com|bing|Wappalyzer|libwww-perl|bingbot|WinHttp|WebZIP|FetchURL|node-superagent|java&#x2F;|FeedDemon|Jullo|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|Java|Feedly|Apache-HttpAsyncClient|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|Ezooms|BOT&#x2F;0.1|YandexBot|FlightDeckReports|Linguee Bot|^$&quot; ) &#123;\n     return 403;\n&#125;\n\nif ($http_user_agent ~* &quot;Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|MSNBot|ia_archiver|Tomato Bot&quot;)\n&#123;\nreturn 403;\n&#125;\nif ($http_user_agent ~* &quot;ApiTool&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;python&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;bingbot&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;Nimbostratus-Bot&quot;) &#123;return 403;&#125;\nif ($http_user_agent ~* &quot;Go-Ahead-Got-It&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;GetWeb!&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Go!Zilla&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Download Demon&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Indy Library&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;libwww-perl&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;Nmap Scripting Engine&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;~17ce.com&quot;) &#123; return 403; &#125;\nif ($http_user_agent ~* &quot;WebBench*&quot;) &#123; return 403; &#125;\n# if ($http_user_agent ~* &quot;spider&quot;) &#123; return 403; &#125; # 这个会影响国内某些搜索引擎爬虫，比如：搜狗\n\n# 禁止非GET|HEAD|POST方式的抓取\nif ($request_method !~ ^(GET|HEAD|POST)$) &#123;\n    return 403;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后在server内添加 include ..&#x2F;agent_deny.conf即可，这里输入具体的文件的路径。</p>\n<h2 id=\"屏蔽某些ip\"><a href=\"#屏蔽某些ip\" class=\"headerlink\" title=\"屏蔽某些ip\"></a>屏蔽某些ip</h2><p>在nginx.conf同级目录下创建文件blocksip.conf，在http节点增加以下配置（也可以设置在server节点对单个网站起作用，或location节点只针对特定访问路径的限制）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">include blocksip.conf;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>blockip.conf中的内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">deny xxx;\nallow xxx;\ndeny all; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"隐藏X-Powerer\"><a href=\"#隐藏X-Powerer\" class=\"headerlink\" title=\"隐藏X-Powerer\"></a>隐藏X-Powerer</h2><p>在http下添加以下内容:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fastcgi_hide_header X-Powered-By\nproxy_hide_header X-Powered-By<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"响应头配置\"><a href=\"#响应头配置\" class=\"headerlink\" title=\"响应头配置\"></a>响应头配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># 减少点击劫持\nadd_header X-Frame-Options SAMEORIGIN;&#x2F;&#x2F;也可设置为DENY \n# 禁止服务器自动解析资源类型\nadd_header X-Content-Type-Options nosniff;\n# 防XSS攻击\nadd_header X-Xss-Protection 1; mode&#x3D;block;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"https配置\"><a href=\"#https配置\" class=\"headerlink\" title=\"https配置\"></a>https配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">ssl_certificate   ..&#x2F;cert&#x2F;192.168.10.106.pem;\nssl_certificate_key  ..&#x2F;cert&#x2F;192.168.10.106-key.pem;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"增强cookie的安全性\"><a href=\"#增强cookie的安全性\" class=\"headerlink\" title=\"增强cookie的安全性\"></a>增强cookie的安全性</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># 只支持 proxy 模式下设置，SameSite 不需要可删除，如果想更安全可以把 SameSite 设置为 Strict\nproxy_cookie_path &#x2F; &quot;&#x2F;; httponly; secure; SameSite&#x3D;Lax&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"80自动重定向至443\"><a href=\"#80自动重定向至443\" class=\"headerlink\" title=\"80自动重定向至443\"></a>80自动重定向至443</h2><p>server节点下添加：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">listen 80;\nserver_name xxx.xxx.xx; # 你的域名\nrewrite ^(.*)$ https:&#x2F;&#x2F;$&#123;server_name&#125;$1 permanent;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Nginx中IF语句的AND-OR等多重判断\"><a href=\"#Nginx中IF语句的AND-OR等多重判断\" class=\"headerlink\" title=\"Nginx中IF语句的AND OR等多重判断\"></a>Nginx中IF语句的AND OR等多重判断</h2><p>nginx的配置中不支持if条件的逻辑与／逻辑或运算 ，并且不支持if的嵌套语法，我们可以用变量的方式来实现：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">set $flag 0;\nif ($host !&#x3D; &#39;www.imfeng.com&#39;) &#123;\n    set $flag &quot;$&#123;flag&#125;1&quot;;\n&#125;\nif ($http_user_agent !&#x3D; &#39;spider&#39;) &#123;\n    set $flag &quot;$&#123;flag&#125;2&quot;;\n&#125;\nif ($flag &#x3D; &quot;012&quot;) &#123;\n    rewrite ^&#x2F;(.*)$ http:&#x2F;&#x2F;www.imfeng.com&#x2F;$1 permanent;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.cnblogs.com/ieinstein/p/7083551.html?utm_source=itdadao&utm_medium=referral\">1、nginx常用配置系列-HTTPS配置</a><br><a href=\"https://blog.cat73.org/20170802/2017080201.nginx-cookie-sucure/\">2、用 Nginx 自动给 Cookie 增加 Secure 和 HttpOnly</a><br><a href=\"https://www.cnblogs.com/aguncn/p/4179035.html\">3、NGINX实现IF语句里的AND，OR多重判断</a><br><a href=\"https://www.cnblogs.com/gouyg/p/10632243.html\">4、通过监控Nginx日志来实时屏蔽高频恶意访问的IP</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c8bfba2e\">4、封面图源</a></p>","categories":[{"name":"应用安全","path":"api/categories/应用安全.json"}],"tags":[{"name":"Nginx","path":"api/tags/Nginx.json"},{"name":"安全","path":"api/tags/安全.json"}]}