{"title":"局域网生成https证书","slug":"130","date":"2022-07-10T12:08:00.000Z","updated":"2022-07-19T06:49:42.000Z","comments":true,"path":"api/articles/130.json","realPath":null,"excerpt":"通过mkcert生成证书,为局域网网站添加https支持。","covers":null,"cover":null,"content":"<p>通过mkcert生成证书,为局域网网站添加https支持。</p>\n<span id=\"more\"></span>\n<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>OS:windows<br>mkcert:<a href=\"https://github.com/FiloSottile/mkcert\">1.4.1</a><br>Nginx:1.20.2</p>\n<h2 id=\"安装根证书到服务器\"><a href=\"#安装根证书到服务器\" class=\"headerlink\" title=\"安装根证书到服务器\"></a>安装根证书到服务器</h2><p>将下载的mkcert-v1.4.1-windows-amd64.exe重命名为mkcert,执行以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>卸载<br>mkcert -uninstall</p>\n</blockquote>\n<h2 id=\"为应用服务器生成ssl证书\"><a href=\"#为应用服务器生成ssl证书\" class=\"headerlink\" title=\"为应用服务器生成ssl证书\"></a>为应用服务器生成ssl证书</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -pkcs12 192.168.10.106 &#x2F;&#x2F;生成p12格式的正式iis可以用，默认密码为：“changeit”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果需要为Nginx生成证书，可通过以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert 127.0.0.1 localhost &#x2F;&#x2F;后面还可以继续空格添加其他域名或IP地址，默认是pem格式<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>此时会生成x.pme和x-key.pem两个文件，然后再Nginx配置：</p>\n<p>Nginx ssl配置:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">listen 443 ssl;\n\nssl_certificate   ..&#x2F;cert&#x2F;192.168.10.106.pem;\nssl_certificate_key  ..&#x2F;cert&#x2F;192.168.10.106-key.pem;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"生成客户端证书\"><a href=\"#生成客户端证书\" class=\"headerlink\" title=\"生成客户端证书\"></a>生成客户端证书</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -pkcs12 -client 192.168.10.123\n&#x2F;&#x2F;生成p12格式客户端证书，win用户可以直接导入，默认密码为：“changeit”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>直接安装即可。</p>\n<blockquote>\n<p>pem格式<br>mkcert -client 192.168.10.123 &#x2F;&#x2F;客户端证书，默认是pem格式</p>\n</blockquote>\n<h2 id=\"Nginx端口占用问题\"><a href=\"#Nginx端口占用问题\" class=\"headerlink\" title=\"Nginx端口占用问题\"></a>Nginx端口占用问题</h2><p>如遇到以下问题:<br>nginx: [emerg] bind() to 0.0.0.0:443 failed (10013: An attempt was made to access a socket in a way<br>按以下命令找到对应的进程,直接杀死即可：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">netstat -aon|findstr &quot;443&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://huadou145.lofter.com/post/205d4db3_1c81c6e8f\">1、封面图源</a></p>\n","more":"<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>OS:windows<br>mkcert:<a href=\"https://github.com/FiloSottile/mkcert\">1.4.1</a><br>Nginx:1.20.2</p>\n<h2 id=\"安装根证书到服务器\"><a href=\"#安装根证书到服务器\" class=\"headerlink\" title=\"安装根证书到服务器\"></a>安装根证书到服务器</h2><p>将下载的mkcert-v1.4.1-windows-amd64.exe重命名为mkcert,执行以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>卸载<br>mkcert -uninstall</p>\n</blockquote>\n<h2 id=\"为应用服务器生成ssl证书\"><a href=\"#为应用服务器生成ssl证书\" class=\"headerlink\" title=\"为应用服务器生成ssl证书\"></a>为应用服务器生成ssl证书</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -pkcs12 192.168.10.106 &#x2F;&#x2F;生成p12格式的正式iis可以用，默认密码为：“changeit”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果需要为Nginx生成证书，可通过以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert 127.0.0.1 localhost &#x2F;&#x2F;后面还可以继续空格添加其他域名或IP地址，默认是pem格式<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>此时会生成x.pme和x-key.pem两个文件，然后再Nginx配置：</p>\n<p>Nginx ssl配置:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">listen 443 ssl;\n\nssl_certificate   ..&#x2F;cert&#x2F;192.168.10.106.pem;\nssl_certificate_key  ..&#x2F;cert&#x2F;192.168.10.106-key.pem;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"生成客户端证书\"><a href=\"#生成客户端证书\" class=\"headerlink\" title=\"生成客户端证书\"></a>生成客户端证书</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkcert -pkcs12 -client 192.168.10.123\n&#x2F;&#x2F;生成p12格式客户端证书，win用户可以直接导入，默认密码为：“changeit”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>直接安装即可。</p>\n<blockquote>\n<p>pem格式<br>mkcert -client 192.168.10.123 &#x2F;&#x2F;客户端证书，默认是pem格式</p>\n</blockquote>\n<h2 id=\"Nginx端口占用问题\"><a href=\"#Nginx端口占用问题\" class=\"headerlink\" title=\"Nginx端口占用问题\"></a>Nginx端口占用问题</h2><p>如遇到以下问题:<br>nginx: [emerg] bind() to 0.0.0.0:443 failed (10013: An attempt was made to access a socket in a way<br>按以下命令找到对应的进程,直接杀死即可：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">netstat -aon|findstr &quot;443&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://huadou145.lofter.com/post/205d4db3_1c81c6e8f\">1、封面图源</a></p>","categories":[{"name":"应用安全","path":"api/categories/应用安全.json"}],"tags":[{"name":"Nginx","path":"api/tags/Nginx.json"},{"name":"应用安全","path":"api/tags/应用安全.json"},{"name":"运维","path":"api/tags/运维.json"}]}