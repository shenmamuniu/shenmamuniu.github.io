{"title":"windows使用bat启动多个应用","slug":"windows使用bat启动多个应用","date":"2024-04-21T08:23:38.000Z","updated":"2024-04-21T08:24:11.071Z","comments":true,"path":"api/articles/windows使用bat启动多个应用.json","excerpt":"每次开机都要开几个程序，于是将打开程序的这几个步骤写入到bat脚本中实现点击脚本自动打开的功能。","covers":null,"content":"<p>每次开机都要开几个程序，于是将打开程序的这几个步骤写入到bat脚本中实现点击脚本自动打开的功能。</p>\n<span id=\"more\"></span>\n\n<p>首先进入到程序所在目录，这里以启动docsify为例，假如bat文件在桌面,docsify文档在D盘：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">@echo off\nD:\n<span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"D:\\docs\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>启动docsify并打开chrome浏览器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">start docsify serve\nstart chrome http://localhost:3000/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>可在启动chrome之前等待5s确保docsify已启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">timeout</span> /t <span class=\"token number\">5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p> <code>docsify</code> 是一个基于 JavaScript 的轻量级文档站点生成器。它可以帮助你快速创建和发布文档网站，无需复杂的设置和构建步骤。你可以使用 <code>docsify</code> 来构建单页应用（SPA）式的文档网站，支持 Markdown 和 HTML，并提供了一些内置功能，如全文搜索、自动生成的侧边栏等。 </p>\n</blockquote>\n<p>完整示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">@echo off\nD:\n<span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"D:\\docs\"</span>\nstart docsify serve\n<span class=\"token function\">timeout</span> /t <span class=\"token number\">5</span>\nstart chrome http://localhost:3000/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以将这段bat代码保存在bat文件中，之后直接点击bat文件就可以直接启动docsify，并启动chrome浏览器打开文档页面。</p>\n<p>以下是关于本文提到的批处理脚本中几个关键命令和语法的简要总结：</p>\n<h3 id=\"cd-命令\"><a href=\"#cd-命令\" class=\"headerlink\" title=\"cd 命令\"></a><code>cd</code> 命令</h3><ul>\n<li><code>cd</code> 是 “change directory” 的缩写，用于改变当前的工作目录。</li>\n<li>例如：<code>cd &quot;D:\\Code&quot;</code> 将当前目录更改为 <code>D:\\plus-doc</code>。</li>\n</ul>\n<blockquote>\n<p>注意: 如果需要切换磁盘，不能执行使用cd</p>\n</blockquote>\n<p>如果bat的目录在c盘，要进入的目录在d:\\plus-doc，则bat中应这么写：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">D:\n<span class=\"token builtin class-name\">cd</span> D:<span class=\"token punctuation\">\\</span>plus-doc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"start-命令\"><a href=\"#start-命令\" class=\"headerlink\" title=\"start 命令\"></a><code>start</code> 命令</h3><ul>\n<li><code>start</code> 用于启动一个新的命令提示符窗口以执行指定的命令或程序。</li>\n<li>例如：<code>start explorer &quot;D:\\plus-doc&quot;</code> 会在文件资源管理器中打开指定的目录。<blockquote>\n<p>注意: 如果不使用start, 这样脚本会在同一个命令提示符窗口中运行命令，并等待其完成后再继续执行脚本的其他部分。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"timeout-命令\"><a href=\"#timeout-命令\" class=\"headerlink\" title=\"timeout 命令\"></a><code>timeout</code> 命令</h3><ul>\n<li><code>timeout</code> 用于在脚本中等待指定的时间（以秒为单位）。</li>\n<li>例如：<code>timeout /t 5</code> 会使脚本暂停 5 秒。</li>\n</ul>\n<h3 id=\"pause-命令\"><a href=\"#pause-命令\" class=\"headerlink\" title=\"pause 命令\"></a><code>pause</code> 命令</h3><ul>\n<li><code>pause</code> 用于暂停批处理脚本的执行并等待用户按下任意键继续。</li>\n<li>通常用于脚本的最后，以便用户查看输出或任何可能的错误信息。</li>\n<li>例如：<code>pause</code> 会在脚本执行到这里时暂停，并显示 “按任意键继续. . .”。</li>\n</ul>\n<p>这些是基本的批处理脚本命令和语法，你可以根据需要结合使用它们来编写复杂的脚本。</p>\n","more":"<p>首先进入到程序所在目录，这里以启动docsify为例，假如bat文件在桌面,docsify文档在D盘：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">@echo off\nD:\n<span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"D:\\docs\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>启动docsify并打开chrome浏览器</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">start docsify serve\nstart chrome http://localhost:3000/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>可在启动chrome之前等待5s确保docsify已启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">timeout</span> /t <span class=\"token number\">5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p> <code>docsify</code> 是一个基于 JavaScript 的轻量级文档站点生成器。它可以帮助你快速创建和发布文档网站，无需复杂的设置和构建步骤。你可以使用 <code>docsify</code> 来构建单页应用（SPA）式的文档网站，支持 Markdown 和 HTML，并提供了一些内置功能，如全文搜索、自动生成的侧边栏等。 </p>\n</blockquote>\n<p>完整示例如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">@echo off\nD:\n<span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"D:\\docs\"</span>\nstart docsify serve\n<span class=\"token function\">timeout</span> /t <span class=\"token number\">5</span>\nstart chrome http://localhost:3000/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以将这段bat代码保存在bat文件中，之后直接点击bat文件就可以直接启动docsify，并启动chrome浏览器打开文档页面。</p>\n<p>以下是关于本文提到的批处理脚本中几个关键命令和语法的简要总结：</p>\n<h3 id=\"cd-命令\"><a href=\"#cd-命令\" class=\"headerlink\" title=\"cd 命令\"></a><code>cd</code> 命令</h3><ul>\n<li><code>cd</code> 是 “change directory” 的缩写，用于改变当前的工作目录。</li>\n<li>例如：<code>cd &quot;D:\\Code&quot;</code> 将当前目录更改为 <code>D:\\plus-doc</code>。</li>\n</ul>\n<blockquote>\n<p>注意: 如果需要切换磁盘，不能执行使用cd</p>\n</blockquote>\n<p>如果bat的目录在c盘，要进入的目录在d:\\plus-doc，则bat中应这么写：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">D:\n<span class=\"token builtin class-name\">cd</span> D:<span class=\"token punctuation\">\\</span>plus-doc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"start-命令\"><a href=\"#start-命令\" class=\"headerlink\" title=\"start 命令\"></a><code>start</code> 命令</h3><ul>\n<li><code>start</code> 用于启动一个新的命令提示符窗口以执行指定的命令或程序。</li>\n<li>例如：<code>start explorer &quot;D:\\plus-doc&quot;</code> 会在文件资源管理器中打开指定的目录。<blockquote>\n<p>注意: 如果不使用start, 这样脚本会在同一个命令提示符窗口中运行命令，并等待其完成后再继续执行脚本的其他部分。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"timeout-命令\"><a href=\"#timeout-命令\" class=\"headerlink\" title=\"timeout 命令\"></a><code>timeout</code> 命令</h3><ul>\n<li><code>timeout</code> 用于在脚本中等待指定的时间（以秒为单位）。</li>\n<li>例如：<code>timeout /t 5</code> 会使脚本暂停 5 秒。</li>\n</ul>\n<h3 id=\"pause-命令\"><a href=\"#pause-命令\" class=\"headerlink\" title=\"pause 命令\"></a><code>pause</code> 命令</h3><ul>\n<li><code>pause</code> 用于暂停批处理脚本的执行并等待用户按下任意键继续。</li>\n<li>通常用于脚本的最后，以便用户查看输出或任何可能的错误信息。</li>\n<li>例如：<code>pause</code> 会在脚本执行到这里时暂停，并显示 “按任意键继续. . .”。</li>\n</ul>\n<p>这些是基本的批处理脚本命令和语法，你可以根据需要结合使用它们来编写复杂的脚本。</p>","categories":[{"name":"BAT","path":"api/categories/BAT.json"}],"tags":[{"name":"BAT","path":"api/tags/BAT.json"}]}