{"title":"C# Thread启动多线程","slug":"127","date":"2022-06-21T06:29:00.000Z","updated":"2022-06-21T06:31:39.000Z","comments":true,"path":"api/articles/127.json","realPath":null,"excerpt":"仅对c# 中Thread类的使用做简单记录，至于使用多线程对应用程序性能带来的影响不在本文研究范围内，但在某些情况下多线程确实对程序的性能有很大的影响，还需结合具体的情况使用。","covers":null,"cover":null,"content":"<p>仅对c# 中Thread类的使用做简单记录，至于使用多线程对应用程序性能带来的影响不在本文研究范围内，但在某些情况下多线程确实对程序的性能有很大的影响，还需结合具体的情况使用。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>开发环境:vs2010+.net framework4.0<br>OS:win10</p>\n<h2 id=\"ThreadStart不带参数\"><a href=\"#ThreadStart不带参数\" class=\"headerlink\" title=\"ThreadStart不带参数\"></a>ThreadStart不带参数</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">Thread t &#x3D; new Thread(ConnectToServer,0);\nt.Start();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>其中ConnectToServer为函数名称</p>\n</blockquote>\n<h2 id=\"ThreadStart带一个参数\"><a href=\"#ThreadStart带一个参数\" class=\"headerlink\" title=\"ThreadStart带一个参数\"></a>ThreadStart带一个参数</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">Thread t2 &#x3D; new Thread(new ParameterizedThreadStart(InsertDb));\nt2.Start(reJson);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>这里函数的参数为object类型</p>\n</blockquote>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://blog.csdn.net/gubaofu/article/details/104648916\">1、C# Thread启动线程时传递参数</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c84a2eba\">2.封面图源</a></p>\n","more":"<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>开发环境:vs2010+.net framework4.0<br>OS:win10</p>\n<h2 id=\"ThreadStart不带参数\"><a href=\"#ThreadStart不带参数\" class=\"headerlink\" title=\"ThreadStart不带参数\"></a>ThreadStart不带参数</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">Thread t &#x3D; new Thread(ConnectToServer,0);\nt.Start();<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>其中ConnectToServer为函数名称</p>\n</blockquote>\n<h2 id=\"ThreadStart带一个参数\"><a href=\"#ThreadStart带一个参数\" class=\"headerlink\" title=\"ThreadStart带一个参数\"></a>ThreadStart带一个参数</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">Thread t2 &#x3D; new Thread(new ParameterizedThreadStart(InsertDb));\nt2.Start(reJson);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>这里函数的参数为object类型</p>\n</blockquote>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://blog.csdn.net/gubaofu/article/details/104648916\">1、C# Thread启动线程时传递参数</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c84a2eba\">2.封面图源</a></p>","categories":[{"name":"语言","path":"api/categories/语言.json"}],"tags":[{"name":"C","path":"api/tags/C.json"}]}