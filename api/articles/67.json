{"title":"Nexus搭建Maven私服","slug":"67","date":"2020-07-24T13:51:00.000Z","updated":"2020-07-24T13:56:34.000Z","comments":true,"path":"api/articles/67.json","excerpt":"本文主要介绍Sonatype Nexus搭建Maven私服，以及jar包的上传及使用过程,通过使用maven私服，可极大减轻维护多个有相同模块的项目负担。","covers":null,"content":"<p>本文主要介绍Sonatype Nexus搭建Maven私服，以及jar包的上传及使用过程,通过使用maven私服，可极大减轻维护多个有相同模块的项目负担。</p>\n<span id=\"more\"></span>\n<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ol>\n<li>Nexus版本：Nexus Repository OSS 3.25</li>\n<li>Nexus部署环境: win10 x64</li>\n<li>开发环境：deeepin v20</li>\n<li>项目类型：Spring Cloud 2.x</li>\n</ol>\n<h2 id=\"Nexus搭建过程\"><a href=\"#Nexus搭建过程\" class=\"headerlink\" title=\"Nexus搭建过程\"></a>Nexus搭建过程</h2><h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>这里我下载的是win版本，通过nexus.exe &#x2F;run 启动。如果启动成功，可在浏览器中输入<a href=\"http://localhost:8081/%E6%9F%A5%E7%9C%8B,%E7%84%B6%E5%90%8E%E8%BF%9B%E8%A1%8C%E8%B4%A6%E6%88%B7%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8D%B3%E5%8F%AF%E3%80%82\">http://localhost:8081/查看,然后进行账户初始化即可。</a></p>\n<h3 id=\"创建Repositry\"><a href=\"#创建Repositry\" class=\"headerlink\" title=\"创建Repositry\"></a>创建Repositry</h3><p>几种Reposity的说明：</p>\n<ol>\n<li>maven-central:中央库，默认从<a href=\"https://repo1.maven.org/maven2/%E6%8B%89%E5%8F%96jar\">https://repo1.maven.org/maven2/拉取jar</a></li>\n<li>maven-releases：私库发行版jar</li>\n<li>maven-snapshots：私库快照（调试版本）jar</li>\n<li>maven-public:仓库分组，把上面三个仓库组合在一起对外提供服务</li>\n</ol>\n<p>这里创建两个maven2(hosted)类型的私库，如omgis-release,omgis-snap,以后把jar推送到这两个库里面，但是，这两个仓库对外是不能public访问的，因此，<br>需要在maven-public仓库中引入这两个私有仓库：System-status-&gt;Repository-&gt;Repositories,找到maven-public,将创建的两个私库添加到maven-public<br>的成员中，这样如果有jar推送至私库，在maven-public中就能看到和引用了。</p>\n<h2 id=\"将jar包上传到私库中\"><a href=\"#将jar包上传到私库中\" class=\"headerlink\" title=\"将jar包上传到私库中\"></a>将jar包上传到私库中</h2><h3 id=\"修改项目pom文件\"><a href=\"#修改项目pom文件\" class=\"headerlink\" title=\"修改项目pom文件\"></a>修改项目pom文件</h3><p>打开你项目的pom文件，添加如下内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;omgis-release&lt;&#x2F;id&gt;\n        &lt;name&gt;Release Repository of omgis&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;omgis-release&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;omgis-snap&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot Repository of omgis&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;omgis-snap&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"添加用户信息\"><a href=\"#添加用户信息\" class=\"headerlink\" title=\"添加用户信息\"></a>添加用户信息</h3><p>打开你本地maven的配置文件settings.xml,在servers节点加入如下配置:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;server&gt;\n    &lt;id&gt;omgis&lt;&#x2F;id&gt;\n    &lt;username&gt;admin&lt;&#x2F;username&gt;\n    &lt;password&gt;123456&lt;&#x2F;password&gt;\n&lt;&#x2F;server&gt;\n&lt;server&gt;\n    &lt;id&gt;omgis-snap&lt;&#x2F;id&gt;\n    &lt;username&gt;admin&lt;&#x2F;username&gt;\n    &lt;password&gt;123456&lt;&#x2F;password&gt;\n&lt;&#x2F;server&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在Intellij idea右侧Maven中，执行maven clean &amp;maven deploy即可将当前模块生成的jar包部署到maven私服中去了，<br>现在你可以到maven-public中看下有没有新生成的jar包了。</p>\n<h2 id=\"使用私服中的jar\"><a href=\"#使用私服中的jar\" class=\"headerlink\" title=\"使用私服中的jar\"></a>使用私服中的jar</h2><p>在你项目的pom文件中添加即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;repository&gt;\n    &lt;id&gt;omgis&lt;&#x2F;id&gt;\n    &lt;name&gt;omgis repo&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;\n    &lt;releases&gt;\n        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n    &lt;&#x2F;releases&gt;\n&lt;&#x2F;repository&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样在维护多个项目时，就可以把它们通用的部分提取出来，只用维护一个，有更新时，直接上传到私服中去，另一个项目直接引用jar即可。</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>天哪，这是什么神仙手段，鬼知道我以前同时维护多个项目时更新有多么难受…</p>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.cnblogs.com/knowledgesea/p/11190579.html\">1.使用Nexus搭建Maven私服</a><br><a href=\"http://zhaoyh.com.cn/2020/07/16/Maven%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/\">2.Maven私服搭建与使用</a><br><a href=\"https://tiezhuzhuzhu923.lofter.com/post/310ff6d7_1c804cbfb\">3.封面图源</a></p>\n","more":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><ol>\n<li>Nexus版本：Nexus Repository OSS 3.25</li>\n<li>Nexus部署环境: win10 x64</li>\n<li>开发环境：deeepin v20</li>\n<li>项目类型：Spring Cloud 2.x</li>\n</ol>\n<h2 id=\"Nexus搭建过程\"><a href=\"#Nexus搭建过程\" class=\"headerlink\" title=\"Nexus搭建过程\"></a>Nexus搭建过程</h2><h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>这里我下载的是win版本，通过nexus.exe &#x2F;run 启动。如果启动成功，可在浏览器中输入<a href=\"http://localhost:8081/%E6%9F%A5%E7%9C%8B,%E7%84%B6%E5%90%8E%E8%BF%9B%E8%A1%8C%E8%B4%A6%E6%88%B7%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8D%B3%E5%8F%AF%E3%80%82\">http://localhost:8081/查看,然后进行账户初始化即可。</a></p>\n<h3 id=\"创建Repositry\"><a href=\"#创建Repositry\" class=\"headerlink\" title=\"创建Repositry\"></a>创建Repositry</h3><p>几种Reposity的说明：</p>\n<ol>\n<li>maven-central:中央库，默认从<a href=\"https://repo1.maven.org/maven2/%E6%8B%89%E5%8F%96jar\">https://repo1.maven.org/maven2/拉取jar</a></li>\n<li>maven-releases：私库发行版jar</li>\n<li>maven-snapshots：私库快照（调试版本）jar</li>\n<li>maven-public:仓库分组，把上面三个仓库组合在一起对外提供服务</li>\n</ol>\n<p>这里创建两个maven2(hosted)类型的私库，如omgis-release,omgis-snap,以后把jar推送到这两个库里面，但是，这两个仓库对外是不能public访问的，因此，<br>需要在maven-public仓库中引入这两个私有仓库：System-status-&gt;Repository-&gt;Repositories,找到maven-public,将创建的两个私库添加到maven-public<br>的成员中，这样如果有jar推送至私库，在maven-public中就能看到和引用了。</p>\n<h2 id=\"将jar包上传到私库中\"><a href=\"#将jar包上传到私库中\" class=\"headerlink\" title=\"将jar包上传到私库中\"></a>将jar包上传到私库中</h2><h3 id=\"修改项目pom文件\"><a href=\"#修改项目pom文件\" class=\"headerlink\" title=\"修改项目pom文件\"></a>修改项目pom文件</h3><p>打开你项目的pom文件，添加如下内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;omgis-release&lt;&#x2F;id&gt;\n        &lt;name&gt;Release Repository of omgis&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;omgis-release&lt;&#x2F;url&gt;\n    &lt;&#x2F;repository&gt;\n    &lt;snapshotRepository&gt;\n        &lt;id&gt;omgis-snap&lt;&#x2F;id&gt;\n        &lt;name&gt;Snapshot Repository of omgis&lt;&#x2F;name&gt;\n        &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;omgis-snap&#x2F;&lt;&#x2F;url&gt;\n    &lt;&#x2F;snapshotRepository&gt;\n&lt;&#x2F;distributionManagement&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"添加用户信息\"><a href=\"#添加用户信息\" class=\"headerlink\" title=\"添加用户信息\"></a>添加用户信息</h3><p>打开你本地maven的配置文件settings.xml,在servers节点加入如下配置:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;server&gt;\n    &lt;id&gt;omgis&lt;&#x2F;id&gt;\n    &lt;username&gt;admin&lt;&#x2F;username&gt;\n    &lt;password&gt;123456&lt;&#x2F;password&gt;\n&lt;&#x2F;server&gt;\n&lt;server&gt;\n    &lt;id&gt;omgis-snap&lt;&#x2F;id&gt;\n    &lt;username&gt;admin&lt;&#x2F;username&gt;\n    &lt;password&gt;123456&lt;&#x2F;password&gt;\n&lt;&#x2F;server&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在Intellij idea右侧Maven中，执行maven clean &amp;maven deploy即可将当前模块生成的jar包部署到maven私服中去了，<br>现在你可以到maven-public中看下有没有新生成的jar包了。</p>\n<h2 id=\"使用私服中的jar\"><a href=\"#使用私服中的jar\" class=\"headerlink\" title=\"使用私服中的jar\"></a>使用私服中的jar</h2><p>在你项目的pom文件中添加即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;repository&gt;\n    &lt;id&gt;omgis&lt;&#x2F;id&gt;\n    &lt;name&gt;omgis repo&lt;&#x2F;name&gt;\n    &lt;url&gt;http:&#x2F;&#x2F;your ip:8081&#x2F;repository&#x2F;maven-public&#x2F;&lt;&#x2F;url&gt;\n    &lt;releases&gt;\n        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n    &lt;&#x2F;releases&gt;\n&lt;&#x2F;repository&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样在维护多个项目时，就可以把它们通用的部分提取出来，只用维护一个，有更新时，直接上传到私服中去，另一个项目直接引用jar即可。</p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>天哪，这是什么神仙手段，鬼知道我以前同时维护多个项目时更新有多么难受…</p>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.cnblogs.com/knowledgesea/p/11190579.html\">1.使用Nexus搭建Maven私服</a><br><a href=\"http://zhaoyh.com.cn/2020/07/16/Maven%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/\">2.Maven私服搭建与使用</a><br><a href=\"https://tiezhuzhuzhu923.lofter.com/post/310ff6d7_1c804cbfb\">3.封面图源</a></p>","categories":[{"name":"Devops","path":"api/categories/Devops.json"}],"tags":[{"name":"Nexus","path":"api/tags/Nexus.json"},{"name":"Maven","path":"api/tags/Maven.json"}]}