{"title":"CSharp使用log4net记录日志的一次意外","slug":"62","date":"2020-04-30T02:16:10.000Z","updated":"2020-04-30T02:16:10.000Z","comments":true,"path":"api/articles/62.json","realPath":null,"excerpt":"本文主要记录一次 在asp.net中使用log4net记录日志 的部署事故。深觉还是祖传代码好啊，就像有些人说不出哪里好，但谁也替代不了。","covers":null,"cover":null,"content":"<p>本文主要记录一次 在asp.net中使用log4net记录日志 的部署事故。深觉还是祖传代码好啊，就像有些人说不出哪里好，但谁也替代不了。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><h3 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h3><p>OS:win10 x64<br>.net framework 4.0<br>vs 2010<br>asp.net</p>\n<h3 id=\"线上环境\"><a href=\"#线上环境\" class=\"headerlink\" title=\"线上环境\"></a>线上环境</h3><p>OS:windows server 2008 r2<br>.net framework 4.0</p>\n<h2 id=\"安装Log4Net的包\"><a href=\"#安装Log4Net的包\" class=\"headerlink\" title=\"安装Log4Net的包\"></a>安装Log4Net的包</h2><p>如果是VS2012以上版本，可以直接使用Nuget包管理器进行安装，VS2010直接去log4net官网下载手动引用即可。</p>\n<h2 id=\"Log4Net的初始化\"><a href=\"#Log4Net的初始化\" class=\"headerlink\" title=\"Log4Net的初始化\"></a>Log4Net的初始化</h2><p>Log4Net的初始化有以下两种方式：在修改AssemblyInfo.cs中初始化、在代码中初始化。</p>\n<h3 id=\"修改AssemblyInfo-cs\"><a href=\"#修改AssemblyInfo-cs\" class=\"headerlink\" title=\"修改AssemblyInfo.cs\"></a>修改AssemblyInfo.cs</h3><p>[assembly: log4net.Config.XmlConfigurator(ConfigFile &#x3D; “log4net.config”, ConfigFileExtension &#x3D; “config”, Watch &#x3D; true)]</p>\n<h3 id=\"使用代码初始化\"><a href=\"#使用代码初始化\" class=\"headerlink\" title=\"使用代码初始化\"></a>使用代码初始化</h3><p>这里log4net.config的读取方式同你的应用类型有关，这里是winform类型的应用程序：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">string path &#x3D; AppDomain.CurrentDomain.BaseDirectory + &quot;log4net&#x2F;log4net.config&quot;;\nlog4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(path));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"添加Log4net-config\"><a href=\"#添加Log4net-config\" class=\"headerlink\" title=\"添加Log4net.config\"></a>添加Log4net.config</h2><p>可通过vscode创建配置文件，将log4net的配置写入到<configuration>节点内</configuration></p>\n<h3 id=\"配置一\"><a href=\"#配置一\" class=\"headerlink\" title=\"配置一\"></a>配置一</h3><p>这段配置了两类日志：Info和Error，全部写到文件中去;<br>注意：这段可能有问题，部署到线上时，无法写入变量，但是有记录的，暂不明原因;</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Level的级别，由高到低 --&gt; \n&lt;!-- None &gt; Fatal &gt; ERROR &gt; WARN &gt; DEBUG &gt; INFO &gt; ALL--&gt; \n&lt;!-- 解释：如果level是ERROR，则在cs文件里面调用log4net的info()方法，则不会写入到日志文件中--&gt;\n&lt;log4net&gt;\n  &lt;!--错误日志类--&gt;\n  &lt;logger name&#x3D;&quot;logerror&quot;&gt;&lt;!--日志类的名字--&gt;\n    &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;&lt;!--定义记录的日志级别--&gt;\n    &lt;appender-ref ref&#x3D;&quot;ErrorAppender&quot; &#x2F;&gt;&lt;!--记录到哪个介质中去--&gt;\n  &lt;&#x2F;logger&gt;\n  &lt;!--信息日志类--&gt;\n  &lt;logger name&#x3D;&quot;loginfo&quot;&gt;\n    &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;\n    &lt;appender-ref ref&#x3D;&quot;InfoAppender&quot; &#x2F;&gt;\n  &lt;&#x2F;logger&gt;\n  &lt;!--错误日志附加介质--&gt;\n  &lt;appender name&#x3D;&quot;ErrorAppender&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender&quot;&gt;&lt;!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质--&gt;\n    &lt;param name&#x3D;&quot;File&quot; value&#x3D;&quot;Log\\\\LogError\\\\&quot; &#x2F;&gt;&lt;!--日志输出到exe程序这个相对目录下--&gt;\n    &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;&lt;!--输出的日志不会覆盖以前的信息--&gt;\n    &lt;param name&#x3D;&quot;MaxSizeRollBackups&quot; value&#x3D;&quot;100&quot; &#x2F;&gt;&lt;!--备份文件的个数--&gt;\n    &lt;param name&#x3D;&quot;MaxFileSize&quot; value&#x3D;&quot;10240&quot; &#x2F;&gt;&lt;!--当个日志文件的最大大小--&gt;\n    &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;&lt;!--是否使用静态文件名--&gt;\n    &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot;.htm&quot;&quot; &#x2F;&gt;&lt;!--日志文件名--&gt;\n    &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;&lt;!--文件创建的方式，这里是以Date方式创建--&gt;\n    &lt;!--错误日志布局--&gt;\n    &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout&quot;&gt;\n      &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;&lt;HR COLOR&#x3D;red&gt;%n异常时间：%d [%t] &lt;BR&gt;%n异常级别：%-5p &lt;BR&gt;%n异 常 类：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size&#x3D;1&gt;&quot;  &#x2F;&gt;\n    &lt;&#x2F;layout&gt;\n  &lt;&#x2F;appender&gt;\n  &lt;!--信息日志附加介质--&gt;\n  &lt;appender name&#x3D;&quot;InfoAppender&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender&quot;&gt;\n    &lt;param name&#x3D;&quot;File&quot; value&#x3D;&quot;Log\\\\LogInfo\\\\&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;MaxFileSize&quot; value&#x3D;&quot;10240&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;MaxSizeRollBackups&quot; value&#x3D;&quot;100&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot;.htm&quot;&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n    &lt;!--信息日志布局--&gt;\n    &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout&quot;&gt;\n      &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;&lt;HR COLOR&#x3D;blue&gt;%n日志时间：%d [%t] &lt;BR&gt;%n日志级别：%-5p &lt;BR&gt;%n日 志 类：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size&#x3D;1&gt;&quot;  &#x2F;&gt;\n    &lt;&#x2F;layout&gt;\n  &lt;&#x2F;appender&gt;\n&lt;&#x2F;log4net&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的帮助类LogHelper.cs</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">public class LogHelper\n    &#123;\n        public static readonly log4net.ILog loginfo &#x3D; log4net.LogManager.GetLogger(&quot;loginfo&quot;);&#x2F;&#x2F;这里的 loginfo 和 log4net.config 里的名字要一样\n        public static readonly log4net.ILog logerror &#x3D; log4net.LogManager.GetLogger(&quot;logerror&quot;);&#x2F;&#x2F;这里的 logerror 和 log4net.config 里的名字要一样\n        public static void WriteLog(string info)\n        &#123;\n            if (loginfo.IsInfoEnabled)\n            &#123;\n                loginfo.Info(info);\n            &#125;\n        &#125;\n\n        public static void WriteLog(string info, Exception ex)\n        &#123;\n            if (logerror.IsErrorEnabled)\n            &#123;\n                logerror.Error(info, ex);\n            &#125;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置二\"><a href=\"#配置二\" class=\"headerlink\" title=\"配置二\"></a>配置二</h3><p>这段可以正常部署，也是之前项目中使用过的，当时是winform+owin这种形式，有web,有桌面端的项目。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;configSections&gt;\n    &lt;section name&#x3D;&quot;log4net&quot; type&#x3D;&quot;log4net.Config.Log4NetConfigurationSectionHandler,log4net&quot;&gt;&lt;&#x2F;section&gt;\n  &lt;&#x2F;configSections&gt;\n  &lt;log4net&gt;\n    &lt;root&gt;\n      &lt;level value&#x3D;&quot;ALL&quot;&gt;&lt;&#x2F;level&gt;\n    &lt;&#x2F;root&gt;\n    &lt;logger name&#x3D;&quot;OneCardRequest&quot;&gt;\n      &lt;level value&#x3D;&quot;INFO&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingRequestFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;OneCardResult&quot;&gt;\n      &lt;level value&#x3D;&quot;INFO&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingResultFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;OneCardException&quot;&gt;\n      &lt;level value&#x3D;&quot;ERROR&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingExceptionFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;InfoLog&quot;&gt;\n      &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingInfoFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;appender name&#x3D;&quot;rollingRequestFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Request&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingResultFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Result&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingExceptionFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Exception&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMddHH&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingInfoFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Info&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n  &lt;&#x2F;log4net&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>帮助类：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">public class Log4netUtility\n    &#123;\n        public static void initialLog4Net() &#123;\n            &#x2F;&#x2F;log4net.Config.XmlConfigurator.ConfigureAndWatch(new )            \n            string path &#x3D; AppDomain.CurrentDomain.BaseDirectory + &quot;log4net&#x2F;log4net.config&quot;;\n            log4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(path));\n        &#125;\n        public static string Exception(string id, Exception ex, string attachMessage) &#123;\n            string result &#x3D; string.Empty;\n            &#x2F;&#x2F;log4net的初始化有两种形式:1.如下 2.写在应用程序集中(见AssemeblyInfo.cs)\n            &#x2F;&#x2F;log4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(&quot;log4net.config&quot;));\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardException&quot;);\n            if (!log.IsErrorEnabled)\n                initialLog4Net();                   \n            if (log.IsErrorEnabled) &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nMesssage:&#123;1&#125;\\r\\nStackTrace:&#123;2&#125;\\r\\nAttachMessage:&#123;3&#125;&quot;, id, ex.Message, ex.StackTrace, attachMessage);\n                log.Error(strMessage);\n                result &#x3D; strMessage;\n            &#125;\n            log &#x3D; null;\n            return result;\n        &#125;\n\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条一卡通请求日志信息\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;id&quot;&gt;请求ID&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;ip&quot;&gt;请求的IP地址&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;datetime&quot;&gt;时间&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;strParam&quot;&gt;请求时传入的参数&lt;&#x2F;param&gt;\n        public static void RequestLog(string id, string ip, string datetime, string strParam)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardRequest&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nIP:&#123;1&#125;\\r\\nDateTime:&#123;2&#125;\\r\\nParam:&#123;3&#125;&quot;, id, ip, datetime, strParam);\n                log.Info(strMessage);\n            &#125;\n            log &#x3D; null;\n        &#125;\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条一卡通处理结果日志\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;id&quot;&gt;请求ID&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;datetime&quot;&gt;时间&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;strResult&quot;&gt;处理结果&lt;&#x2F;param&gt;\n        public static void ResultLog(string id, string datetime, string strResult)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardResult&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nDateTime:&#123;1&#125;\\r\\nParam:&#123;2&#125;&quot;, id, datetime, strResult);\n                log.Info(strMessage);\n            &#125;\n            log &#x3D; null;\n        &#125;\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条普通的日志信息\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;message&quot;&gt;日志内容&lt;&#x2F;param&gt;\n        public static void Info(string message)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;InfoLog&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                log.Info(message);\n            &#125;\n            log &#x3D; null;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置小结\"><a href=\"#配置小结\" class=\"headerlink\" title=\"配置小结\"></a>配置小结</h3><ol>\n<li><p>每个配置文件中都有logger(通常有多个),每个logger有appender属性，其描述了日志的格式、存储方式、更新方式等信息</p>\n</li>\n<li><p>代码中引用时通过LogManager获取配置文件中定义的logger,通过logger对象调用Info,Error,Debug等方法</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.cnblogs.com/kliine/p/10950859.html\">1. C# 使用log4net记录日志</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c8f12e12\">2. 封面图源</a></p>\n","more":"<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><h3 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h3><p>OS:win10 x64<br>.net framework 4.0<br>vs 2010<br>asp.net</p>\n<h3 id=\"线上环境\"><a href=\"#线上环境\" class=\"headerlink\" title=\"线上环境\"></a>线上环境</h3><p>OS:windows server 2008 r2<br>.net framework 4.0</p>\n<h2 id=\"安装Log4Net的包\"><a href=\"#安装Log4Net的包\" class=\"headerlink\" title=\"安装Log4Net的包\"></a>安装Log4Net的包</h2><p>如果是VS2012以上版本，可以直接使用Nuget包管理器进行安装，VS2010直接去log4net官网下载手动引用即可。</p>\n<h2 id=\"Log4Net的初始化\"><a href=\"#Log4Net的初始化\" class=\"headerlink\" title=\"Log4Net的初始化\"></a>Log4Net的初始化</h2><p>Log4Net的初始化有以下两种方式：在修改AssemblyInfo.cs中初始化、在代码中初始化。</p>\n<h3 id=\"修改AssemblyInfo-cs\"><a href=\"#修改AssemblyInfo-cs\" class=\"headerlink\" title=\"修改AssemblyInfo.cs\"></a>修改AssemblyInfo.cs</h3><p>[assembly: log4net.Config.XmlConfigurator(ConfigFile &#x3D; “log4net.config”, ConfigFileExtension &#x3D; “config”, Watch &#x3D; true)]</p>\n<h3 id=\"使用代码初始化\"><a href=\"#使用代码初始化\" class=\"headerlink\" title=\"使用代码初始化\"></a>使用代码初始化</h3><p>这里log4net.config的读取方式同你的应用类型有关，这里是winform类型的应用程序：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">string path &#x3D; AppDomain.CurrentDomain.BaseDirectory + &quot;log4net&#x2F;log4net.config&quot;;\nlog4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(path));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"添加Log4net-config\"><a href=\"#添加Log4net-config\" class=\"headerlink\" title=\"添加Log4net.config\"></a>添加Log4net.config</h2><p>可通过vscode创建配置文件，将log4net的配置写入到<configuration>节点内</configuration></p>\n<h3 id=\"配置一\"><a href=\"#配置一\" class=\"headerlink\" title=\"配置一\"></a>配置一</h3><p>这段配置了两类日志：Info和Error，全部写到文件中去;<br>注意：这段可能有问题，部署到线上时，无法写入变量，但是有记录的，暂不明原因;</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- Level的级别，由高到低 --&gt; \n&lt;!-- None &gt; Fatal &gt; ERROR &gt; WARN &gt; DEBUG &gt; INFO &gt; ALL--&gt; \n&lt;!-- 解释：如果level是ERROR，则在cs文件里面调用log4net的info()方法，则不会写入到日志文件中--&gt;\n&lt;log4net&gt;\n  &lt;!--错误日志类--&gt;\n  &lt;logger name&#x3D;&quot;logerror&quot;&gt;&lt;!--日志类的名字--&gt;\n    &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;&lt;!--定义记录的日志级别--&gt;\n    &lt;appender-ref ref&#x3D;&quot;ErrorAppender&quot; &#x2F;&gt;&lt;!--记录到哪个介质中去--&gt;\n  &lt;&#x2F;logger&gt;\n  &lt;!--信息日志类--&gt;\n  &lt;logger name&#x3D;&quot;loginfo&quot;&gt;\n    &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;\n    &lt;appender-ref ref&#x3D;&quot;InfoAppender&quot; &#x2F;&gt;\n  &lt;&#x2F;logger&gt;\n  &lt;!--错误日志附加介质--&gt;\n  &lt;appender name&#x3D;&quot;ErrorAppender&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender&quot;&gt;&lt;!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质--&gt;\n    &lt;param name&#x3D;&quot;File&quot; value&#x3D;&quot;Log\\\\LogError\\\\&quot; &#x2F;&gt;&lt;!--日志输出到exe程序这个相对目录下--&gt;\n    &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;&lt;!--输出的日志不会覆盖以前的信息--&gt;\n    &lt;param name&#x3D;&quot;MaxSizeRollBackups&quot; value&#x3D;&quot;100&quot; &#x2F;&gt;&lt;!--备份文件的个数--&gt;\n    &lt;param name&#x3D;&quot;MaxFileSize&quot; value&#x3D;&quot;10240&quot; &#x2F;&gt;&lt;!--当个日志文件的最大大小--&gt;\n    &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;&lt;!--是否使用静态文件名--&gt;\n    &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot;.htm&quot;&quot; &#x2F;&gt;&lt;!--日志文件名--&gt;\n    &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;&lt;!--文件创建的方式，这里是以Date方式创建--&gt;\n    &lt;!--错误日志布局--&gt;\n    &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout&quot;&gt;\n      &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;&lt;HR COLOR&#x3D;red&gt;%n异常时间：%d [%t] &lt;BR&gt;%n异常级别：%-5p &lt;BR&gt;%n异 常 类：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size&#x3D;1&gt;&quot;  &#x2F;&gt;\n    &lt;&#x2F;layout&gt;\n  &lt;&#x2F;appender&gt;\n  &lt;!--信息日志附加介质--&gt;\n  &lt;appender name&#x3D;&quot;InfoAppender&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender&quot;&gt;\n    &lt;param name&#x3D;&quot;File&quot; value&#x3D;&quot;Log\\\\LogInfo\\\\&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;MaxFileSize&quot; value&#x3D;&quot;10240&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;MaxSizeRollBackups&quot; value&#x3D;&quot;100&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot;.htm&quot;&quot; &#x2F;&gt;\n    &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n    &lt;!--信息日志布局--&gt;\n    &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout&quot;&gt;\n      &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;&lt;HR COLOR&#x3D;blue&gt;%n日志时间：%d [%t] &lt;BR&gt;%n日志级别：%-5p &lt;BR&gt;%n日 志 类：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size&#x3D;1&gt;&quot;  &#x2F;&gt;\n    &lt;&#x2F;layout&gt;\n  &lt;&#x2F;appender&gt;\n&lt;&#x2F;log4net&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的帮助类LogHelper.cs</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">public class LogHelper\n    &#123;\n        public static readonly log4net.ILog loginfo &#x3D; log4net.LogManager.GetLogger(&quot;loginfo&quot;);&#x2F;&#x2F;这里的 loginfo 和 log4net.config 里的名字要一样\n        public static readonly log4net.ILog logerror &#x3D; log4net.LogManager.GetLogger(&quot;logerror&quot;);&#x2F;&#x2F;这里的 logerror 和 log4net.config 里的名字要一样\n        public static void WriteLog(string info)\n        &#123;\n            if (loginfo.IsInfoEnabled)\n            &#123;\n                loginfo.Info(info);\n            &#125;\n        &#125;\n\n        public static void WriteLog(string info, Exception ex)\n        &#123;\n            if (logerror.IsErrorEnabled)\n            &#123;\n                logerror.Error(info, ex);\n            &#125;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置二\"><a href=\"#配置二\" class=\"headerlink\" title=\"配置二\"></a>配置二</h3><p>这段可以正常部署，也是之前项目中使用过的，当时是winform+owin这种形式，有web,有桌面端的项目。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;configSections&gt;\n    &lt;section name&#x3D;&quot;log4net&quot; type&#x3D;&quot;log4net.Config.Log4NetConfigurationSectionHandler,log4net&quot;&gt;&lt;&#x2F;section&gt;\n  &lt;&#x2F;configSections&gt;\n  &lt;log4net&gt;\n    &lt;root&gt;\n      &lt;level value&#x3D;&quot;ALL&quot;&gt;&lt;&#x2F;level&gt;\n    &lt;&#x2F;root&gt;\n    &lt;logger name&#x3D;&quot;OneCardRequest&quot;&gt;\n      &lt;level value&#x3D;&quot;INFO&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingRequestFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;OneCardResult&quot;&gt;\n      &lt;level value&#x3D;&quot;INFO&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingResultFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;OneCardException&quot;&gt;\n      &lt;level value&#x3D;&quot;ERROR&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingExceptionFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;logger name&#x3D;&quot;InfoLog&quot;&gt;\n      &lt;level value&#x3D;&quot;ALL&quot; &#x2F;&gt;\n      &lt;appender-ref ref&#x3D;&quot;rollingInfoFile&quot; &#x2F;&gt;\n    &lt;&#x2F;logger&gt;\n    &lt;appender name&#x3D;&quot;rollingRequestFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Request&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingResultFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Result&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingExceptionFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Exception&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMddHH&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n    &lt;appender name&#x3D;&quot;rollingInfoFile&quot; type&#x3D;&quot;log4net.Appender.RollingFileAppender,log4net&quot; &gt;\n      &lt;param name&#x3D;&quot;File&quot; type&#x3D;&quot;&quot; value&#x3D;&quot;Log&#x2F;Info&#x2F;&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;AppendToFile&quot; value&#x3D;&quot;true&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;RollingStyle&quot; value&#x3D;&quot;Date&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;DatePattern&quot; value&#x3D;&quot;yyyyMMdd&quot; &#x2F;&gt;\n      &lt;param name&#x3D;&quot;StaticLogFileName&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n      &lt;layout type&#x3D;&quot;log4net.Layout.PatternLayout,log4net&quot;&gt;\n        &lt;param name&#x3D;&quot;ConversionPattern&quot; value&#x3D;&quot;%n[%d] %c %n%m%n%n&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Header&quot; value&#x3D;&quot;-----------BEGIN-----------&quot; &#x2F;&gt;\n        &lt;param name&#x3D;&quot;Footer&quot; value&#x3D;&quot;------------END------------&quot; &#x2F;&gt;\n      &lt;&#x2F;layout&gt;\n    &lt;&#x2F;appender&gt;\n  &lt;&#x2F;log4net&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>帮助类：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">public class Log4netUtility\n    &#123;\n        public static void initialLog4Net() &#123;\n            &#x2F;&#x2F;log4net.Config.XmlConfigurator.ConfigureAndWatch(new )            \n            string path &#x3D; AppDomain.CurrentDomain.BaseDirectory + &quot;log4net&#x2F;log4net.config&quot;;\n            log4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(path));\n        &#125;\n        public static string Exception(string id, Exception ex, string attachMessage) &#123;\n            string result &#x3D; string.Empty;\n            &#x2F;&#x2F;log4net的初始化有两种形式:1.如下 2.写在应用程序集中(见AssemeblyInfo.cs)\n            &#x2F;&#x2F;log4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(&quot;log4net.config&quot;));\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardException&quot;);\n            if (!log.IsErrorEnabled)\n                initialLog4Net();                   \n            if (log.IsErrorEnabled) &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nMesssage:&#123;1&#125;\\r\\nStackTrace:&#123;2&#125;\\r\\nAttachMessage:&#123;3&#125;&quot;, id, ex.Message, ex.StackTrace, attachMessage);\n                log.Error(strMessage);\n                result &#x3D; strMessage;\n            &#125;\n            log &#x3D; null;\n            return result;\n        &#125;\n\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条一卡通请求日志信息\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;id&quot;&gt;请求ID&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;ip&quot;&gt;请求的IP地址&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;datetime&quot;&gt;时间&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;strParam&quot;&gt;请求时传入的参数&lt;&#x2F;param&gt;\n        public static void RequestLog(string id, string ip, string datetime, string strParam)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardRequest&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nIP:&#123;1&#125;\\r\\nDateTime:&#123;2&#125;\\r\\nParam:&#123;3&#125;&quot;, id, ip, datetime, strParam);\n                log.Info(strMessage);\n            &#125;\n            log &#x3D; null;\n        &#125;\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条一卡通处理结果日志\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;id&quot;&gt;请求ID&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;datetime&quot;&gt;时间&lt;&#x2F;param&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;strResult&quot;&gt;处理结果&lt;&#x2F;param&gt;\n        public static void ResultLog(string id, string datetime, string strResult)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;OneCardResult&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                string strMessage &#x3D; string.Format(&quot;RequestID:&#123;0&#125;\\r\\nDateTime:&#123;1&#125;\\r\\nParam:&#123;2&#125;&quot;, id, datetime, strResult);\n                log.Info(strMessage);\n            &#125;\n            log &#x3D; null;\n        &#125;\n        &#x2F;&#x2F;&#x2F; &lt;summary&gt;\n        &#x2F;&#x2F;&#x2F; 追加一条普通的日志信息\n        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;\n        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;message&quot;&gt;日志内容&lt;&#x2F;param&gt;\n        public static void Info(string message)\n        &#123;\n            log4net.ILog log &#x3D; log4net.LogManager.GetLogger(&quot;InfoLog&quot;);\n            if (!log.IsInfoEnabled)\n                initialLog4Net();\n            if (log.IsInfoEnabled)\n            &#123;\n                log.Info(message);\n            &#125;\n            log &#x3D; null;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置小结\"><a href=\"#配置小结\" class=\"headerlink\" title=\"配置小结\"></a>配置小结</h3><ol>\n<li><p>每个配置文件中都有logger(通常有多个),每个logger有appender属性，其描述了日志的格式、存储方式、更新方式等信息</p>\n</li>\n<li><p>代码中引用时通过LogManager获取配置文件中定义的logger,通过logger对象调用Info,Error,Debug等方法</p>\n</li>\n</ol>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.cnblogs.com/kliine/p/10950859.html\">1. C# 使用log4net记录日志</a><br><a href=\"https://huadou145.lofter.com/post/205d4db3_1c8f12e12\">2. 封面图源</a></p>","categories":[],"tags":[{"name":"日志","path":"api/tags/日志.json"},{"name":"C","path":"api/tags/C.json"}]}