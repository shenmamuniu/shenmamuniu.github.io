{"title":"Python中的文件和文件夹操作","slug":"Python中的文件和文件夹操作","date":"2022-11-26T08:03:53.000Z","updated":"2022-12-04T06:49:51.102Z","comments":true,"path":"api/articles/Python中的文件和文件夹操作.json","excerpt":"本文记录用python处理文件的一些操作，含文件的遍历、拷贝、重命名等操作。","covers":["/2022/11/26/python-zhong-de-wen-jian-he-wen-jian-jia-cao-zuo/Python%E7%9A%84shutil.jpg"],"content":"<p>本文记录用python处理文件的一些操作，含文件的遍历、拷贝、重命名等操作。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>Python: 3.9</p>\n<p>OS: Windows</p>\n<p>IDE: VS Code</p>\n<h2 id=\"文件遍历\"><a href=\"#文件遍历\" class=\"headerlink\" title=\"文件遍历\"></a>文件遍历</h2><p>参考：<a href=\"https://www.cnblogs.com/yibeimingyue/p/14678667.html\">python遍历某个文件夹下的所有子文件夹及文件</a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>      \n    <span class=\"token keyword\">for</span> <span class=\"token builtin\">dir</span> <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"判断文件是否存在\"><a href=\"#判断文件是否存在\" class=\"headerlink\" title=\"判断文件是否存在\"></a>判断文件是否存在</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>awz3_path<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"文件拷贝\"><a href=\"#文件拷贝\" class=\"headerlink\" title=\"文件拷贝\"></a>文件拷贝</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">import shutil\nshutil.copy(source,dest)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>shutil的更多用法：</p>\n<p><img src=\"/2022/11/26/python-zhong-de-wen-jian-he-wen-jian-jia-cao-zuo/Python%E7%9A%84shutil.jpg\"></p>\n<p>更多用法，参考：<a href=\"https://www.cnblogs.com/ltkekeli1229/p/15709414.html\">Python模块-shutil模块详解</a></p>\n<h2 id=\"文本文件的读取\"><a href=\"#文本文件的读取\" class=\"headerlink\" title=\"文本文件的读取\"></a>文本文件的读取</h2><p> Python open() 方法用于打开一个文件，并返回文件对象。 </p>\n<h3 id=\"全部读取文件内容\"><a href=\"#全部读取文件内容\" class=\"headerlink\" title=\"全部读取文件内容\"></a>全部读取文件内容</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">txt_file<span class=\"token operator\">=</span><span class=\"token string\">\"xx.txt\"</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>txt_file<span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>with关键字的使用：读完文件后，要对文件关闭，调用文件的close,dispose的方法，否则文件会被占用，此时使用with就可以自动关闭，和c#中的using关键字非常相似。</p>\n</blockquote>\n<h3 id=\"逐行读取文本文件\"><a href=\"#逐行读取文本文件\" class=\"headerlink\" title=\"逐行读取文本文件\"></a>逐行读取文本文件</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>txt_file<span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    line<span class=\"token operator\">=</span>fs<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> line<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        line<span class=\"token operator\">=</span>fs<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"读取JSON文件\"><a href=\"#读取JSON文件\" class=\"headerlink\" title=\"读取JSON文件\"></a>读取JSON文件</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xx.json\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    htss<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>htss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"文本文件的写入\"><a href=\"#文本文件的写入\" class=\"headerlink\" title=\"文本文件的写入\"></a>文本文件的写入</h2><p>open函数的<a href=\"https://www.runoob.com/python3/python3-file-methods.html\">mode参数</a></p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>写模式，新建一个文件，如果该文件已存在则会报错。</td>\n</tr>\n<tr>\n<td>b</td>\n<td>二进制模式。</td>\n</tr>\n<tr>\n<td>+</td>\n<td>打开一个文件进行更新(可读可写)。</td>\n</tr>\n<tr>\n<td>U</td>\n<td>通用换行模式（<strong>Python 3 不支持</strong>）。</td>\n</tr>\n<tr>\n<td>r</td>\n<td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>\n</tr>\n<tr>\n<td>rb</td>\n<td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>r+</td>\n<td>打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td>rb+</td>\n<td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>w</td>\n<td>打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td>wb</td>\n<td>以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>w+</td>\n<td>打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td>wb+</td>\n<td>以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>a</td>\n<td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td>ab</td>\n<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td>a+</td>\n<td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n<tr>\n<td>ab+</td>\n<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n</tbody></table>\n<h3 id=\"文件的写入\"><a href=\"#文件的写入\" class=\"headerlink\" title=\"文件的写入\"></a>文件的写入</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"做自己的保护神\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件的追加\"><a href=\"#文件的追加\" class=\"headerlink\" title=\"文件的追加\"></a>文件的追加</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"落子无悔\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此时文件内容：</p>\n<blockquote>\n<p><em><strong>做自己的保护神落子无悔</strong></em></p>\n</blockquote>\n<p>如果需要换行，添加换行符<strong>\\n</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"好好生活好好爱\\n\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n","more":"<h2 id=\"应用环境\"><a href=\"#应用环境\" class=\"headerlink\" title=\"应用环境\"></a>应用环境</h2><p>Python: 3.9</p>\n<p>OS: Windows</p>\n<p>IDE: VS Code</p>\n<h2 id=\"文件遍历\"><a href=\"#文件遍历\" class=\"headerlink\" title=\"文件遍历\"></a>文件遍历</h2><p>参考：<a href=\"https://www.cnblogs.com/yibeimingyue/p/14678667.html\">python遍历某个文件夹下的所有子文件夹及文件</a></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>      \n    <span class=\"token keyword\">for</span> <span class=\"token builtin\">dir</span> <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token builtin\">file</span> <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"判断文件是否存在\"><a href=\"#判断文件是否存在\" class=\"headerlink\" title=\"判断文件是否存在\"></a>判断文件是否存在</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>awz3_path<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"文件拷贝\"><a href=\"#文件拷贝\" class=\"headerlink\" title=\"文件拷贝\"></a>文件拷贝</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">import shutil\nshutil.copy(source,dest)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>shutil的更多用法：</p>\n<p><img src=\"/2022/11/26/python-zhong-de-wen-jian-he-wen-jian-jia-cao-zuo/Python%E7%9A%84shutil.jpg\"></p>\n<p>更多用法，参考：<a href=\"https://www.cnblogs.com/ltkekeli1229/p/15709414.html\">Python模块-shutil模块详解</a></p>\n<h2 id=\"文本文件的读取\"><a href=\"#文本文件的读取\" class=\"headerlink\" title=\"文本文件的读取\"></a>文本文件的读取</h2><p> Python open() 方法用于打开一个文件，并返回文件对象。 </p>\n<h3 id=\"全部读取文件内容\"><a href=\"#全部读取文件内容\" class=\"headerlink\" title=\"全部读取文件内容\"></a>全部读取文件内容</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">txt_file<span class=\"token operator\">=</span><span class=\"token string\">\"xx.txt\"</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>txt_file<span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>with关键字的使用：读完文件后，要对文件关闭，调用文件的close,dispose的方法，否则文件会被占用，此时使用with就可以自动关闭，和c#中的using关键字非常相似。</p>\n</blockquote>\n<h3 id=\"逐行读取文本文件\"><a href=\"#逐行读取文本文件\" class=\"headerlink\" title=\"逐行读取文本文件\"></a>逐行读取文本文件</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>txt_file<span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    line<span class=\"token operator\">=</span>fs<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> line<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n        line<span class=\"token operator\">=</span>fs<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"读取JSON文件\"><a href=\"#读取JSON文件\" class=\"headerlink\" title=\"读取JSON文件\"></a>读取JSON文件</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xx.json\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fs<span class=\"token punctuation\">:</span>\n    htss<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>htss<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"文本文件的写入\"><a href=\"#文本文件的写入\" class=\"headerlink\" title=\"文本文件的写入\"></a>文本文件的写入</h2><p>open函数的<a href=\"https://www.runoob.com/python3/python3-file-methods.html\">mode参数</a></p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>写模式，新建一个文件，如果该文件已存在则会报错。</td>\n</tr>\n<tr>\n<td>b</td>\n<td>二进制模式。</td>\n</tr>\n<tr>\n<td>+</td>\n<td>打开一个文件进行更新(可读可写)。</td>\n</tr>\n<tr>\n<td>U</td>\n<td>通用换行模式（<strong>Python 3 不支持</strong>）。</td>\n</tr>\n<tr>\n<td>r</td>\n<td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>\n</tr>\n<tr>\n<td>rb</td>\n<td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>r+</td>\n<td>打开一个文件用于读写。文件指针将会放在文件的开头。</td>\n</tr>\n<tr>\n<td>rb+</td>\n<td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>w</td>\n<td>打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td>wb</td>\n<td>以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>w+</td>\n<td>打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td>\n</tr>\n<tr>\n<td>wb+</td>\n<td>以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</td>\n</tr>\n<tr>\n<td>a</td>\n<td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td>ab</td>\n<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>\n</tr>\n<tr>\n<td>a+</td>\n<td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n<tr>\n<td>ab+</td>\n<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>\n</tr>\n</tbody></table>\n<h3 id=\"文件的写入\"><a href=\"#文件的写入\" class=\"headerlink\" title=\"文件的写入\"></a>文件的写入</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"做自己的保护神\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"文件的追加\"><a href=\"#文件的追加\" class=\"headerlink\" title=\"文件的追加\"></a>文件的追加</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"落子无悔\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此时文件内容：</p>\n<blockquote>\n<p><em><strong>做自己的保护神落子无悔</strong></em></p>\n</blockquote>\n<p>如果需要换行，添加换行符<strong>\\n</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.txt\"</span><span class=\"token punctuation\">,</span>mode<span class=\"token operator\">=</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"好好生活好好爱\\n\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}