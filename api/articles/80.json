{"title":"基于TDEngine的轨迹数据存储及数据利用","slug":"80","date":"2021-01-17T10:04:00.000Z","updated":"2021-01-17T10:07:26.000Z","comments":true,"path":"api/articles/80.json","excerpt":"本文对TDEngine超级表及其python connector的使用做了简单的记录。","covers":null,"content":"<p>本文对TDEngine超级表及其python connector的使用做了简单的记录。</p>\n<span id=\"more\"></span>\n<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><p>OS:centos 8.2<br>TDEngine版本：2.0.7.0</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着轨迹数据的越来越多，现有Oracle数据无论是从性能还是从可维护性的角度都不足支撑现有系统的运行。通过对现有时序数据的评估，最终使用TDEngine对轨迹数据进行存储。</p>\n<h2 id=\"TDEngine的安装及启动\"><a href=\"#TDEngine的安装及启动\" class=\"headerlink\" title=\"TDEngine的安装及启动\"></a>TDEngine的安装及启动</h2><h3 id=\"配置FQDN\"><a href=\"#配置FQDN\" class=\"headerlink\" title=\"配置FQDN\"></a>配置FQDN</h3><p>当前版本连接TDEngine都是通过FQDN进行的，因此如果后续想要通过各种驱动访问tdengine,必须要配置这个属性。<br>修改&#x2F;etc&#x2F;hostname配置主机名<br>修改&#x2F;etc&#x2F;hosts配置主机名和ip地址的关系<br>修改完毕之后如果能ping通主机名，则表示配置完成。</p>\n<h3 id=\"安装及启动命令\"><a href=\"#安装及启动命令\" class=\"headerlink\" title=\"安装及启动命令\"></a>安装及启动命令</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">rpm -ivh TDengine-server-2.0.7.0-Linux-x64.rpm\nsystemctl start taosd\nsystemctl stop taosd\nsystemctl status taosd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"卸载TDEngine\"><a href=\"#卸载TDEngine\" class=\"headerlink\" title=\"卸载TDEngine\"></a>卸载TDEngine</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">rpm -e tdengine<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"TDEngine中的SQL语法\"><a href=\"#TDEngine中的SQL语法\" class=\"headerlink\" title=\"TDEngine中的SQL语法\"></a>TDEngine中的SQL语法</h2><p>连接tdengine</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">taos -h hostname<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"数据库创建\"><a href=\"#数据库创建\" class=\"headerlink\" title=\"数据库创建\"></a>数据库创建</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create database if not exists ship_track keep 3650 precision &quot;us&quot;;\nuse ship_track;\ndrop database if exists ship_track;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>[keep] 数据存储的天数，最长为10年，过期数据会自动删除<br>[precision]时间的精度,默认为毫秒，这里取微秒</p>\n<h3 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h3><p>TDEngine中有超级表的概念，即对于同一类的数据我们可以把他们存储到一个超级表中，然后每个设备的数据再存储到超级表下的子表，这样在针对单个子表进行查询时会极大的挺高查询的效率。</p>\n<p>超级表有一个tags属性,TAGS 列名不能与其他列名相同,这里我们指定的是设备编号，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table if not exists S_SHIPS(UPDATETIME TIMESTAMP,SHIPNAME BINARY(50),LNG DOUBLE,LAT DOUBLE,CS BINARY(20),MESSAGETEXT BINARY(4000)) tags(USERID BINARY(20));\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建子表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">CREATE TABLE IF NOT EXISTS tb_name USING S_SHIPS TAGS (tag_value1, ...);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"数据写入\"><a href=\"#数据写入\" class=\"headerlink\" title=\"数据写入\"></a>数据写入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">INSERT INTO tb_name VALUES (field_value, ...);\nINSERT INTO tb_name (field1_name, ...) VALUES (field1_value, ...)\n-- 可以在写入时创建超级表的子表\nINSERT INTO tb_name using S_SHIPS tags(xx) VALUES(field1_value, ...)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><p>查询超级表下的子表数量：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select count(TBNAME) from S_SHIPS;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里的TBNAME是一个关键字，可用于统计分析。<br>根据时间间隔查询数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select AVG(lng) from t985000989 interval(30s);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>interval单位： a(毫秒)、s(秒)、 m(分)、h(小时)、d(天)、w(周)。 </p>\n<h2 id=\"使用Python写入及查询taos数据\"><a href=\"#使用Python写入及查询taos数据\" class=\"headerlink\" title=\"使用Python写入及查询taos数据\"></a>使用Python写入及查询taos数据</h2><h3 id=\"安装python-connector\"><a href=\"#安装python-connector\" class=\"headerlink\" title=\"安装python-connector\"></a>安装python-connector</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">pip3 install &#x2F;usr&#x2F;local&#x2F;taos&#x2F;connector&#x2F;python&#x2F;linux&#x2F;python3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"数据写入-1\"><a href=\"#数据写入-1\" class=\"headerlink\" title=\"数据写入\"></a>数据写入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import taos \nimport datetime\n\nconn &#x3D; taos.connect(host&#x3D;&quot;test&quot;, user&#x3D;&quot;root&quot;, password&#x3D;&quot;taosdata&quot;, config&#x3D;&quot;&#x2F;etc&#x2F;taos&quot;)\ndt&#x3D;datetime.datetime.now()\ninsertsql&#x3D;&#39;insert into t &#39;\nc1 &#x3D; conn.cursor()\nc1.execute(&#39;use dbaseName&#39;)\nc1.execute(insertSql)\nc1.close()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import taos \nimport json\n\nconn &#x3D; taos.connect(host&#x3D;&quot;test&quot;, user&#x3D;&quot;root&quot;, password&#x3D;&quot;taosdata&quot;, config&#x3D;&quot;&#x2F;etc&#x2F;taos&quot;)\nquerySql&#x3D;&#39;&#39;\nc1 &#x3D; conn.cursor()\nc1.execute(&#39;use dbaseName&#39;)\nc1.execute(querySql)\nships&#x3D;[]\nfor data in c1:\n    ship&#x3D;&#123;&#125;\n    ship[&quot;mmsi&quot;]&#x3D;data[0]\n    ship[&quot;count&quot;]&#x3D;data[1]\n    ships.append(ship)\nshipsStr&#x3D;json.dumps(ships)\nc1.close()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.jianshu.com/p/066677035940\">1、保姆级演示一分钟搞定TDengine的下载安装</a><br><a href=\"https://tiezhuzhuzhu923.lofter.com/post/310ff6d7_1c804cbfb\">2、Cover</a></p>\n","more":"<h2 id=\"运行环境\"><a href=\"#运行环境\" class=\"headerlink\" title=\"运行环境\"></a>运行环境</h2><p>OS:centos 8.2<br>TDEngine版本：2.0.7.0</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着轨迹数据的越来越多，现有Oracle数据无论是从性能还是从可维护性的角度都不足支撑现有系统的运行。通过对现有时序数据的评估，最终使用TDEngine对轨迹数据进行存储。</p>\n<h2 id=\"TDEngine的安装及启动\"><a href=\"#TDEngine的安装及启动\" class=\"headerlink\" title=\"TDEngine的安装及启动\"></a>TDEngine的安装及启动</h2><h3 id=\"配置FQDN\"><a href=\"#配置FQDN\" class=\"headerlink\" title=\"配置FQDN\"></a>配置FQDN</h3><p>当前版本连接TDEngine都是通过FQDN进行的，因此如果后续想要通过各种驱动访问tdengine,必须要配置这个属性。<br>修改&#x2F;etc&#x2F;hostname配置主机名<br>修改&#x2F;etc&#x2F;hosts配置主机名和ip地址的关系<br>修改完毕之后如果能ping通主机名，则表示配置完成。</p>\n<h3 id=\"安装及启动命令\"><a href=\"#安装及启动命令\" class=\"headerlink\" title=\"安装及启动命令\"></a>安装及启动命令</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">rpm -ivh TDengine-server-2.0.7.0-Linux-x64.rpm\nsystemctl start taosd\nsystemctl stop taosd\nsystemctl status taosd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"卸载TDEngine\"><a href=\"#卸载TDEngine\" class=\"headerlink\" title=\"卸载TDEngine\"></a>卸载TDEngine</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">rpm -e tdengine<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"TDEngine中的SQL语法\"><a href=\"#TDEngine中的SQL语法\" class=\"headerlink\" title=\"TDEngine中的SQL语法\"></a>TDEngine中的SQL语法</h2><p>连接tdengine</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">taos -h hostname<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"数据库创建\"><a href=\"#数据库创建\" class=\"headerlink\" title=\"数据库创建\"></a>数据库创建</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">create database if not exists ship_track keep 3650 precision &quot;us&quot;;\nuse ship_track;\ndrop database if exists ship_track;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>[keep] 数据存储的天数，最长为10年，过期数据会自动删除<br>[precision]时间的精度,默认为毫秒，这里取微秒</p>\n<h3 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h3><p>TDEngine中有超级表的概念，即对于同一类的数据我们可以把他们存储到一个超级表中，然后每个设备的数据再存储到超级表下的子表，这样在针对单个子表进行查询时会极大的挺高查询的效率。</p>\n<p>超级表有一个tags属性,TAGS 列名不能与其他列名相同,这里我们指定的是设备编号，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create table if not exists S_SHIPS(UPDATETIME TIMESTAMP,SHIPNAME BINARY(50),LNG DOUBLE,LAT DOUBLE,CS BINARY(20),MESSAGETEXT BINARY(4000)) tags(USERID BINARY(20));\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>创建子表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">CREATE TABLE IF NOT EXISTS tb_name USING S_SHIPS TAGS (tag_value1, ...);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"数据写入\"><a href=\"#数据写入\" class=\"headerlink\" title=\"数据写入\"></a>数据写入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">INSERT INTO tb_name VALUES (field_value, ...);\nINSERT INTO tb_name (field1_name, ...) VALUES (field1_value, ...)\n-- 可以在写入时创建超级表的子表\nINSERT INTO tb_name using S_SHIPS tags(xx) VALUES(field1_value, ...)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><p>查询超级表下的子表数量：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select count(TBNAME) from S_SHIPS;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里的TBNAME是一个关键字，可用于统计分析。<br>根据时间间隔查询数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select AVG(lng) from t985000989 interval(30s);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>interval单位： a(毫秒)、s(秒)、 m(分)、h(小时)、d(天)、w(周)。 </p>\n<h2 id=\"使用Python写入及查询taos数据\"><a href=\"#使用Python写入及查询taos数据\" class=\"headerlink\" title=\"使用Python写入及查询taos数据\"></a>使用Python写入及查询taos数据</h2><h3 id=\"安装python-connector\"><a href=\"#安装python-connector\" class=\"headerlink\" title=\"安装python-connector\"></a>安装python-connector</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">pip3 install &#x2F;usr&#x2F;local&#x2F;taos&#x2F;connector&#x2F;python&#x2F;linux&#x2F;python3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"数据写入-1\"><a href=\"#数据写入-1\" class=\"headerlink\" title=\"数据写入\"></a>数据写入</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import taos \nimport datetime\n\nconn &#x3D; taos.connect(host&#x3D;&quot;test&quot;, user&#x3D;&quot;root&quot;, password&#x3D;&quot;taosdata&quot;, config&#x3D;&quot;&#x2F;etc&#x2F;taos&quot;)\ndt&#x3D;datetime.datetime.now()\ninsertsql&#x3D;&#39;insert into t &#39;\nc1 &#x3D; conn.cursor()\nc1.execute(&#39;use dbaseName&#39;)\nc1.execute(insertSql)\nc1.close()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">import taos \nimport json\n\nconn &#x3D; taos.connect(host&#x3D;&quot;test&quot;, user&#x3D;&quot;root&quot;, password&#x3D;&quot;taosdata&quot;, config&#x3D;&quot;&#x2F;etc&#x2F;taos&quot;)\nquerySql&#x3D;&#39;&#39;\nc1 &#x3D; conn.cursor()\nc1.execute(&#39;use dbaseName&#39;)\nc1.execute(querySql)\nships&#x3D;[]\nfor data in c1:\n    ship&#x3D;&#123;&#125;\n    ship[&quot;mmsi&quot;]&#x3D;data[0]\n    ship[&quot;count&quot;]&#x3D;data[1]\n    ships.append(ship)\nshipsStr&#x3D;json.dumps(ships)\nc1.close()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Referenced\"><a href=\"#Referenced\" class=\"headerlink\" title=\"Referenced\"></a>Referenced</h2><p><a href=\"https://www.jianshu.com/p/066677035940\">1、保姆级演示一分钟搞定TDengine的下载安装</a><br><a href=\"https://tiezhuzhuzhu923.lofter.com/post/310ff6d7_1c804cbfb\">2、Cover</a></p>","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"GIS","path":"api/tags/GIS.json"},{"name":"大数据","path":"api/tags/大数据.json"},{"name":"时序数据","path":"api/tags/时序数据.json"}]}